var l1=Object.create;var{defineProperty:c,getPrototypeOf:p1,getOwnPropertyNames:pG,getOwnPropertyDescriptor:i1}=Object,iG=Object.prototype.hasOwnProperty;var FG=(G,Y,Z)=>{Z=G!=null?l1(p1(G)):{};const Q=Y||!G||!G.__esModule?c(Z,"default",{value:G,enumerable:!0}):Z;for(let X of pG(G))if(!iG.call(Q,X))c(Q,X,{get:()=>G[X],enumerable:!0});return Q},O=(G)=>{const Y=O.moduleCache??=new WeakMap;var Z=Y.get(G);if(Z)return Z;var Q=c({},"__esModule",{value:!0}),X={enumerable:!1};if(G&&typeof G==="object"||typeof G==="function"){for(let J of pG(G))if(!iG.call(Q,J))c(Q,J,{get:()=>G[J],enumerable:!(X=i1(G,J))||X.enumerable})}return Y.set(G,Q),Q};var R=(G,Y)=>()=>(Y||G((Y={exports:{}}).exports,Y),Y.exports);var ZG=(G,Y)=>{for(var Z in Y)c(G,Z,{get:Y[Z],enumerable:!0,configurable:!0,set:(Q)=>Y[Z]=()=>Q})};var b=(G,Y)=>()=>(G&&(Y=G(G=0)),Y);var C0=R((rZ,R0)=>{var X0=function(G,Y){return function Z(){return G.apply(Y,arguments)}},a1=function(G){return G!==null&&!u(G)&&G.constructor!==null&&!u(G.constructor)&&_(G.constructor.isBuffer)&&G.constructor.isBuffer(G)},s1=function(G){let Y;if(typeof ArrayBuffer!=="undefined"&&ArrayBuffer.isView)Y=ArrayBuffer.isView(G);else Y=G&&G.buffer&&W0(G.buffer);return Y},p=function(G,Y,{allOwnKeys:Z=!1}={}){if(G===null||typeof G==="undefined")return;let Q,X;if(typeof G!=="object")G=[G];if(k(G))for(Q=0,X=G.length;Q<X;Q++)Y.call(null,G[Q],Q,G);else{const J=Z?Object.getOwnPropertyNames(G):Object.keys(G),W=J.length;let B;for(Q=0;Q<W;Q++)B=J[Q],Y.call(null,G[B],B,G)}},B0=function(G,Y){Y=Y.toLowerCase();const Z=Object.keys(G);let Q=Z.length,X;while(Q-- >0)if(X=Z[Q],Y===X.toLowerCase())return X;return null},SG=function(){const{caseless:G}=$0(this)&&this||{},Y={},Z=(Q,X)=>{const J=G&&B0(Y,X)||X;if(QG(Y[J])&&QG(Q))Y[J]=SG(Y[J],Q);else if(QG(Q))Y[J]=SG({},Q);else if(k(Q))Y[J]=Q.slice();else Y[J]=Q};for(let Q=0,X=arguments.length;Q<X;Q++)arguments[Q]&&p(arguments[Q],Z);return Y},N9=function(G){return!!(G&&_(G.append)&&G[Symbol.toStringTag]==="FormData"&&G[Symbol.iterator])},S=function(G,Y,Z,Q,X){if(Error.call(this),Error.captureStackTrace)Error.captureStackTrace(this,this.constructor);else this.stack=new Error().stack;this.message=G,this.name="AxiosError",Y&&(this.code=Y),Z&&(this.config=Z),Q&&(this.request=Q),X&&(this.response=X)},HG=function(G){return z.isPlainObject(G)||z.isArray(G)},F0=function(G){return z.endsWith(G,"[]")?G.slice(0,-2):G},sG=function(G,Y,Z){if(!G)return Y;return G.concat(Y).map(function Q(X,J){return X=F0(X),!Z&&J?"["+X+"]":X}).join(Z?".":"")},_9=function(G){return z.isArray(G)&&!G.some(HG)},$G=function(G,Y,Z){if(!z.isObject(G))throw new TypeError("target must be an object");Y=Y||new FormData,Z=z.toFlatObject(Z,{metaTokens:!0,dots:!1,indexes:!1},!1,function L(H,C){return!z.isUndefined(C[H])});const Q=Z.metaTokens,X=Z.visitor||$,J=Z.dots,W=Z.indexes,M=(Z.Blob||typeof Blob!=="undefined"&&Blob)&&z.isSpecCompliantForm(Y);if(!z.isFunction(X))throw new TypeError("visitor must be a function");function I(L){if(L===null)return"";if(z.isDate(L))return L.toISOString();if(!M&&z.isBlob(L))throw new S("Blob is not supported. Use a Buffer instead.");if(z.isArrayBuffer(L)||z.isTypedArray(L))return M&&typeof Blob==="function"?new Blob([L]):Buffer.from(L);return L}function $(L,H,C){let U=L;if(L&&!C&&typeof L==="object"){if(z.endsWith(H,"{}"))H=Q?H:H.slice(0,-2),L=JSON.stringify(L);else if(z.isArray(L)&&_9(L)||(z.isFileList(L)||z.endsWith(H,"[]"))&&(U=z.toArray(L)))return H=F0(H),U.forEach(function K(T,F){!(z.isUndefined(T)||T===null)&&Y.append(W===!0?sG([H],F,J):W===null?H:H+"[]",I(T))}),!1}if(HG(L))return!0;return Y.append(sG(C,H,J),I(L)),!1}const w=[],D=Object.assign(j9,{defaultVisitor:$,convertValue:I,isVisitable:HG});function P(L,H){if(z.isUndefined(L))return;if(w.indexOf(L)!==-1)throw Error("Circular reference detected in "+H.join("."));w.push(L),z.forEach(L,function C(U,K){if((!(z.isUndefined(U)||U===null)&&X.call(Y,U,z.isString(K)?K.trim():K,H,D))===!0)P(U,H?H.concat(K):[K])}),w.pop()}if(!z.isObject(G))throw new TypeError("data must be an object");return P(G),Y},rG=function(G){const Y={"!":"%21","'":"%27","(":"%28",")":"%29","~":"%7E","%20":"+","%00":"\0"};return encodeURIComponent(G).replace(/[!'()~]|%20|%00/g,function Z(Q){return Y[Q]})},RG=function(G,Y){this._pairs=[],G&&$G(G,this,Y)},x9=function(G){return encodeURIComponent(G).replace(/%3A/gi,":").replace(/%24/g,"$").replace(/%2C/gi,",").replace(/%20/g,"+").replace(/%5B/gi,"[").replace(/%5D/gi,"]")},U0=function(G,Y,Z){if(!Y)return G;const Q=Z&&Z.encode||x9,X=Z&&Z.serialize;let J;if(X)J=X(Y,Z);else J=z.isURLSearchParams(Y)?Y.toString():new RG(Y,Z).toString(Q);if(J){const W=G.indexOf("#");if(W!==-1)G=G.slice(0,W);G+=(G.indexOf("?")===-1?"?":"&")+J}return G},k9=function(G,Y){return $G(G,new j.classes.URLSearchParams,Object.assign({visitor:function(Z,Q,X,J){if(j.isNode&&z.isBuffer(Z))return this.append(Q,Z.toString("base64")),!1;return J.defaultVisitor.apply(this,arguments)}},Y))},h9=function(G){return z.matchAll(/\w+|\[(\w*)]/g,G).map((Y)=>{return Y[0]==="[]"?"":Y[1]||Y[0]})},g9=function(G){const Y={},Z=Object.keys(G);let Q;const X=Z.length;let J;for(Q=0;Q<X;Q++)J=Z[Q],Y[J]=G[J];return Y},S0=function(G){function Y(Z,Q,X,J){let W=Z[J++];const B=Number.isFinite(+W),M=J>=Z.length;if(W=!W&&z.isArray(X)?X.length:W,M){if(z.hasOwnProp(X,W))X[W]=[X[W],Q];else X[W]=Q;return!B}if(!X[W]||!z.isObject(X[W]))X[W]=[];if(Y(Z,Q,X[W],J)&&z.isArray(X[W]))X[W]=g9(X[W]);return!B}if(z.isFormData(G)&&z.isFunction(G.entries)){const Z={};return z.forEachEntry(G,(Q,X)=>{Y(h9(Q),X,Z,0)}),Z}return null},m9=function(G,Y,Z){if(z.isString(G))try{return(Y||JSON.parse)(G),z.trim(G)}catch(Q){if(Q.name!=="SyntaxError")throw Q}return(Z||JSON.stringify)(G)},d=function(G){return G&&String(G).trim().toLowerCase()},XG=function(G){if(G===!1||G==null)return G;return z.isArray(G)?G.map(XG):String(G)},d9=function(G){const Y=Object.create(null),Z=/([^\s,;=]+)\s*(?:=\s*([^,;]+))?/g;let Q;while(Q=Z.exec(G))Y[Q[1]]=Q[2];return Y},UG=function(G,Y,Z,Q,X){if(z.isFunction(Q))return Q.call(this,Y,Z);if(X)Y=Z;if(!z.isString(Y))return;if(z.isString(Q))return Y.indexOf(Q)!==-1;if(z.isRegExp(Q))return Q.test(Y)},l9=function(G){return G.trim().toLowerCase().replace(/([a-z\d])(\w*)/g,(Y,Z,Q)=>{return Z.toUpperCase()+Q})},p9=function(G,Y){const Z=z.toCamelCase(" "+Y);["get","set","has"].forEach((Q)=>{Object.defineProperty(G,Q+Z,{value:function(X,J,W){return this[Q].call(this,Y,X,J,W)},configurable:!0})})},VG=function(G,Y){const Z=this||AG,Q=Y||Z,X=q.from(Q.headers);let J=Q.data;return z.forEach(G,function W(B){J=B.call(Z,J,X.normalize(),Y?Y.status:void 0)}),X.normalize(),J},H0=function(G){return!!(G&&G.__CANCEL__)},n=function(G,Y,Z){S.call(this,G==null?"canceled":G,S.ERR_CANCELED,Y,Z),this.name="CanceledError"},i9=function(G,Y,Z){const Q=Z.config.validateStatus;if(!Z.status||!Q||Q(Z.status))G(Z);else Y(new S("Request failed with status code "+Z.status,[S.ERR_BAD_REQUEST,S.ERR_BAD_RESPONSE][Math.floor(Z.status/100)-4],Z.config,Z.request,Z))},a9=function(G){return/^([a-z][a-z\d+\-.]*:)?\/\//i.test(G)},s9=function(G,Y){return Y?G.replace(/\/+$/,"")+"/"+Y.replace(/^\/+/,""):G},P0=function(G,Y){if(G&&!a9(Y))return s9(G,Y);return Y},o9=function(G){const Y=/^([-+\w]{1,25})(:?\/\/|:)/.exec(G);return Y&&Y[1]||""},t9=function(G,Y){G=G||10;const Z=new Array(G),Q=new Array(G);let X=0,J=0,W;return Y=Y!==void 0?Y:1000,function B(M){const I=Date.now(),$=Q[J];if(!W)W=I;Z[X]=M,Q[X]=I;let w=J,D=0;while(w!==X)D+=Z[w++],w=w%G;if(X=(X+1)%G,X===J)J=(J+1)%G;if(I-W<Y)return;const P=$&&I-$;return P?Math.round(D*1000/P):void 0}},eG=function(G,Y){let Z=0;const Q=t9(50,250);return(X)=>{const J=X.loaded,W=X.lengthComputable?X.total:void 0,B=J-Z,M=Q(B),I=J<=W;Z=J;const $={loaded:J,total:W,progress:W?J/W:void 0,bytes:B,rate:M?M:void 0,estimated:M&&W&&I?(W-J)/M:void 0,event:X};$[Y?"download":"upload"]=!0,G($)}},wG=function(G){if(G.cancelToken)G.cancelToken.throwIfRequested();if(G.signal&&G.signal.aborted)throw new n(null,G)},Y0=function(G){if(wG(G),G.headers=q.from(G.headers),G.data=VG.call(G,G.transformRequest),["post","put","patch"].indexOf(G.method)!==-1)G.headers.setContentType("application/x-www-form-urlencoded",!1);return E0.getAdapter(G.adapter||AG.adapter)(G).then(function Z(Q){return wG(G),Q.data=VG.call(G,G.transformResponse,Q),Q.headers=q.from(Q.headers),Q},function Z(Q){if(!H0(Q)){if(wG(G),Q&&Q.response)Q.response.data=VG.call(G,G.transformResponse,Q.response),Q.response.headers=q.from(Q.response.headers)}return Promise.reject(Q)})},v=function(G,Y){Y=Y||{};const Z={};function Q(I,$,w){if(z.isPlainObject(I)&&z.isPlainObject($))return z.merge.call({caseless:w},I,$);else if(z.isPlainObject($))return z.merge({},$);else if(z.isArray($))return $.slice();return $}function X(I,$,w){if(!z.isUndefined($))return Q(I,$,w);else if(!z.isUndefined(I))return Q(void 0,I,w)}function J(I,$){if(!z.isUndefined($))return Q(void 0,$)}function W(I,$){if(!z.isUndefined($))return Q(void 0,$);else if(!z.isUndefined(I))return Q(void 0,I)}function B(I,$,w){if(w in Y)return Q(I,$);else if(w in G)return Q(void 0,I)}const M={url:J,method:J,data:J,baseURL:W,transformRequest:W,transformResponse:W,paramsSerializer:W,timeout:W,timeoutMessage:W,withCredentials:W,adapter:W,responseType:W,xsrfCookieName:W,xsrfHeaderName:W,onUploadProgress:W,onDownloadProgress:W,decompress:W,maxContentLength:W,maxBodyLength:W,beforeRedirect:W,transport:W,httpAgent:W,httpsAgent:W,cancelToken:W,socketPath:W,responseEncoding:W,validateStatus:B,headers:(I,$)=>X(Z0(I),Z0($),!0)};return z.forEach(Object.keys(Object.assign({},G,Y)),function I($){const w=M[$]||X,D=w(G[$],Y[$],$);z.isUndefined(D)&&w!==B||(Z[$]=D)}),Z},ZY=function(G,Y,Z){if(typeof G!=="object")throw new S("options must be an object",S.ERR_BAD_OPTION_VALUE);const Q=Object.keys(G);let X=Q.length;while(X-- >0){const J=Q[X],W=Y[J];if(W){const B=G[J],M=B===void 0||W(B,J,G);if(M!==!0)throw new S("option "+J+" must be "+M,S.ERR_BAD_OPTION_VALUE);continue}if(Z!==!0)throw new S("Unknown option "+J,S.ERR_BAD_OPTION)}},XY=function(G){return function Y(Z){return G.apply(null,Z)}},WY=function(G){return z.isObject(G)&&G.isAxiosError===!0},D0=function(G){const Y=new WG(G),Z=X0(WG.prototype.request,Y);return z.extend(Z,WG.prototype,Y,{allOwnKeys:!0}),z.extend(Z,Y,null,{allOwnKeys:!0}),Z.create=function Q(X){return D0(v(G,X))},Z},{toString:n1}=Object.prototype,{getPrototypeOf:DG}=Object,JG=((G)=>(Y)=>{const Z=n1.call(Y);return G[Z]||(G[Z]=Z.slice(8,-1).toLowerCase())})(Object.create(null)),x=(G)=>{return G=G.toLowerCase(),(Y)=>JG(Y)===G},BG=(G)=>(Y)=>typeof Y===G,{isArray:k}=Array,u=BG("undefined"),W0=x("ArrayBuffer"),r1=BG("string"),_=BG("function"),J0=BG("number"),KG=(G)=>G!==null&&typeof G==="object",o1=(G)=>G===!0||G===!1,QG=(G)=>{if(JG(G)!=="object")return!1;const Y=DG(G);return(Y===null||Y===Object.prototype||Object.getPrototypeOf(Y)===null)&&!(Symbol.toStringTag in G)&&!(Symbol.iterator in G)},t1=x("Date"),e1=x("File"),G9=x("Blob"),Y9=x("FileList"),Z9=(G)=>KG(G)&&_(G.pipe),Q9=(G)=>{let Y;return G&&(typeof FormData==="function"&&G instanceof FormData||_(G.append)&&((Y=JG(G))==="formdata"||Y==="object"&&_(G.toString)&&G.toString()==="[object FormData]"))},X9=x("URLSearchParams"),W9=(G)=>G.trim?G.trim():G.replace(/^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g,""),K0=(()=>{if(typeof globalThis!=="undefined")return globalThis;return typeof self!=="undefined"?self:typeof window!=="undefined"?window:global})(),$0=(G)=>!u(G)&&G!==K0,J9=(G,Y,Z,{allOwnKeys:Q}={})=>{return p(Y,(X,J)=>{if(Z&&_(X))G[J]=X0(X,Z);else G[J]=X},{allOwnKeys:Q}),G},B9=(G)=>{if(G.charCodeAt(0)===65279)G=G.slice(1);return G},K9=(G,Y,Z,Q)=>{G.prototype=Object.create(Y.prototype,Q),G.prototype.constructor=G,Object.defineProperty(G,"super",{value:Y.prototype}),Z&&Object.assign(G.prototype,Z)},$9=(G,Y,Z,Q)=>{let X,J,W;const B={};if(Y=Y||{},G==null)return Y;do{X=Object.getOwnPropertyNames(G),J=X.length;while(J-- >0)if(W=X[J],(!Q||Q(W,G,Y))&&!B[W])Y[W]=G[W],B[W]=!0;G=Z!==!1&&DG(G)}while(G&&(!Z||Z(G,Y))&&G!==Object.prototype);return Y},z9=(G,Y,Z)=>{if(G=String(G),Z===void 0||Z>G.length)Z=G.length;Z-=Y.length;const Q=G.indexOf(Y,Z);return Q!==-1&&Q===Z},M9=(G)=>{if(!G)return null;if(k(G))return G;let Y=G.length;if(!J0(Y))return null;const Z=new Array(Y);while(Y-- >0)Z[Y]=G[Y];return Z},T9=((G)=>{return(Y)=>{return G&&Y instanceof G}})(typeof Uint8Array!=="undefined"&&DG(Uint8Array)),I9=(G,Y)=>{const Q=(G&&G[Symbol.iterator]).call(G);let X;while((X=Q.next())&&!X.done){const J=X.value;Y.call(G,J[0],J[1])}},F9=(G,Y)=>{let Z;const Q=[];while((Z=G.exec(Y))!==null)Q.push(Z);return Q},L9=x("HTMLFormElement"),U9=(G)=>{return G.toLowerCase().replace(/[-_\s]([a-z\d])(\w*)/g,function Y(Z,Q,X){return Q.toUpperCase()+X})},nG=(({hasOwnProperty:G})=>(Y,Z)=>G.call(Y,Z))(Object.prototype),V9=x("RegExp"),z0=(G,Y)=>{const Z=Object.getOwnPropertyDescriptors(G),Q={};p(Z,(X,J)=>{let W;if((W=Y(X,J,G))!==!1)Q[J]=W||X}),Object.defineProperties(G,Q)},w9=(G)=>{z0(G,(Y,Z)=>{if(_(G)&&["arguments","caller","callee"].indexOf(Z)!==-1)return!1;const Q=G[Z];if(!_(Q))return;if(Y.enumerable=!1,("writable"in Y)){Y.writable=!1;return}if(!Y.set)Y.set=()=>{throw Error("Can not rewrite read-only method \'"+Z+"\'")}})},S9=(G,Y)=>{const Z={},Q=(X)=>{X.forEach((J)=>{Z[J]=!0})};return k(G)?Q(G):Q(String(G).split(Y)),Z},H9=()=>{},P9=(G,Y)=>{return G=+G,Number.isFinite(G)?G:Y},LG="abcdefghijklmnopqrstuvwxyz",aG="0123456789",M0={DIGIT:aG,ALPHA:LG,ALPHA_DIGIT:LG+LG.toUpperCase()+aG},E9=(G=16,Y=M0.ALPHA_DIGIT)=>{let Z="";const{length:Q}=Y;while(G--)Z+=Y[Math.random()*Q|0];return Z},D9=(G)=>{const Y=new Array(10),Z=(Q,X)=>{if(KG(Q)){if(Y.indexOf(Q)>=0)return;if(!("toJSON"in Q)){Y[X]=Q;const J=k(Q)?[]:{};return p(Q,(W,B)=>{const M=Z(W,X+1);!u(M)&&(J[B]=M)}),Y[X]=void 0,J}}return Q};return Z(G,0)},R9=x("AsyncFunction"),C9=(G)=>G&&(KG(G)||_(G))&&_(G.then)&&_(G.catch),z={isArray:k,isArrayBuffer:W0,isBuffer:a1,isFormData:Q9,isArrayBufferView:s1,isString:r1,isNumber:J0,isBoolean:o1,isObject:KG,isPlainObject:QG,isUndefined:u,isDate:t1,isFile:e1,isBlob:G9,isRegExp:V9,isFunction:_,isStream:Z9,isURLSearchParams:X9,isTypedArray:T9,isFileList:Y9,forEach:p,merge:SG,extend:J9,trim:W9,stripBOM:B9,inherits:K9,toFlatObject:$9,kindOf:JG,kindOfTest:x,endsWith:z9,toArray:M9,forEachEntry:I9,matchAll:F9,isHTMLForm:L9,hasOwnProperty:nG,hasOwnProp:nG,reduceDescriptors:z0,freezeMethods:w9,toObjectSet:S9,toCamelCase:U9,noop:H9,toFiniteNumber:P9,findKey:B0,global:K0,isContextDefined:$0,ALPHABET:M0,generateString:E9,isSpecCompliantForm:N9,toJSONObject:D9,isAsyncFn:R9,isThenable:C9};z.inherits(S,Error,{toJSON:function G(){return{message:this.message,name:this.name,description:this.description,number:this.number,fileName:this.fileName,lineNumber:this.lineNumber,columnNumber:this.columnNumber,stack:this.stack,config:z.toJSONObject(this.config),code:this.code,status:this.response&&this.response.status?this.response.status:null}}});var T0=S.prototype,I0={};["ERR_BAD_OPTION_VALUE","ERR_BAD_OPTION","ECONNABORTED","ETIMEDOUT","ERR_NETWORK","ERR_FR_TOO_MANY_REDIRECTS","ERR_DEPRECATED","ERR_BAD_RESPONSE","ERR_BAD_REQUEST","ERR_CANCELED","ERR_NOT_SUPPORT","ERR_INVALID_URL"].forEach((G)=>{I0[G]={value:G}});Object.defineProperties(S,I0);Object.defineProperty(T0,"isAxiosError",{value:!0});S.from=(G,Y,Z,Q,X,J)=>{const W=Object.create(T0);return z.toFlatObject(G,W,function B(M){return M!==Error.prototype},(B)=>{return B!=="isAxiosError"}),S.call(W,G.message,Y,Z,Q,X),W.cause=G,W.name=G.name,J&&Object.assign(W,J),W};var A9=null,j9=z.toFlatObject(z,{},null,function G(Y){return/^is[A-Z]/.test(Y)}),L0=RG.prototype;L0.append=function G(Y,Z){this._pairs.push([Y,Z])};L0.toString=function G(Y){const Z=Y?function(Q){return Y.call(this,Q,rG)}:rG;return this._pairs.map(function Q(X){return Z(X[0])+"="+Z(X[1])},"").join("&")};class V0{constructor(){this.handlers=[]}use(G,Y,Z){return this.handlers.push({fulfilled:G,rejected:Y,synchronous:Z?Z.synchronous:!1,runWhen:Z?Z.runWhen:null}),this.handlers.length-1}eject(G){if(this.handlers[G])this.handlers[G]=null}clear(){if(this.handlers)this.handlers=[]}forEach(G){z.forEach(this.handlers,function Y(Z){if(Z!==null)G(Z)})}}var oG=V0,w0={silentJSONParsing:!0,forcedJSONParsing:!0,clarifyTimeoutError:!1},q9=typeof URLSearchParams!=="undefined"?URLSearchParams:RG,O9=typeof FormData!=="undefined"?FormData:null,b9=typeof Blob!=="undefined"?Blob:null,y9=(()=>{let G;if(typeof navigator!=="undefined"&&((G=navigator.product)==="ReactNative"||G==="NativeScript"||G==="NS"))return!1;return typeof window!=="undefined"&&typeof document!=="undefined"})(),v9=(()=>{return typeof WorkerGlobalScope!=="undefined"&&self instanceof WorkerGlobalScope&&typeof self.importScripts==="function"})(),j={isBrowser:!0,classes:{URLSearchParams:q9,FormData:O9,Blob:b9},isStandardBrowserEnv:y9,isStandardBrowserWebWorkerEnv:v9,protocols:["http","https","file","blob","url","data"]},CG={transitional:w0,adapter:["xhr","http"],transformRequest:[function G(Y,Z){const Q=Z.getContentType()||"",X=Q.indexOf("application/json")>-1,J=z.isObject(Y);if(J&&z.isHTMLForm(Y))Y=new FormData(Y);if(z.isFormData(Y)){if(!X)return Y;return X?JSON.stringify(S0(Y)):Y}if(z.isArrayBuffer(Y)||z.isBuffer(Y)||z.isStream(Y)||z.isFile(Y)||z.isBlob(Y))return Y;if(z.isArrayBufferView(Y))return Y.buffer;if(z.isURLSearchParams(Y))return Z.setContentType("application/x-www-form-urlencoded;charset=utf-8",!1),Y.toString();let B;if(J){if(Q.indexOf("application/x-www-form-urlencoded")>-1)return k9(Y,this.formSerializer).toString();if((B=z.isFileList(Y))||Q.indexOf("multipart/form-data")>-1){const M=this.env&&this.env.FormData;return $G(B?{"files[]":Y}:Y,M&&new M,this.formSerializer)}}if(J||X)return Z.setContentType("application/json",!1),m9(Y);return Y}],transformResponse:[function G(Y){const Z=this.transitional||CG.transitional,Q=Z&&Z.forcedJSONParsing,X=this.responseType==="json";if(Y&&z.isString(Y)&&(Q&&!this.responseType||X)){const W=!(Z&&Z.silentJSONParsing)&&X;try{return JSON.parse(Y)}catch(B){if(W){if(B.name==="SyntaxError")throw S.from(B,S.ERR_BAD_RESPONSE,this,null,this.response);throw B}}}return Y}],timeout:0,xsrfCookieName:"XSRF-TOKEN",xsrfHeaderName:"X-XSRF-TOKEN",maxContentLength:-1,maxBodyLength:-1,env:{FormData:j.classes.FormData,Blob:j.classes.Blob},validateStatus:function G(Y){return Y>=200&&Y<300},headers:{common:{Accept:"application/json, text/plain, */*","Content-Type":void 0}}};z.forEach(["delete","get","head","post","put","patch"],(G)=>{CG.headers[G]={}});var AG=CG,f9=z.toObjectSet(["age","authorization","content-length","content-type","etag","expires","from","host","if-modified-since","if-unmodified-since","last-modified","location","max-forwards","proxy-authorization","referer","retry-after","user-agent"]),c9=(G)=>{const Y={};let Z,Q,X;return G&&G.split("\n").forEach(function J(W){if(X=W.indexOf(":"),Z=W.substring(0,X).trim().toLowerCase(),Q=W.substring(X+1).trim(),!Z||Y[Z]&&f9[Z])return;if(Z==="set-cookie")if(Y[Z])Y[Z].push(Q);else Y[Z]=[Q];else Y[Z]=Y[Z]?Y[Z]+", "+Q:Q}),Y},tG=Symbol("internals"),u9=(G)=>/^[-_a-zA-Z0-9^`|~,!#$%&'*+.]+$/.test(G.trim());class i{constructor(G){G&&this.set(G)}set(G,Y,Z){const Q=this;function X(W,B,M){const I=d(B);if(!I)throw new Error("header name must be a non-empty string");const $=z.findKey(Q,I);if(!$||Q[$]===void 0||M===!0||M===void 0&&Q[$]!==!1)Q[$||B]=XG(W)}const J=(W,B)=>z.forEach(W,(M,I)=>X(M,I,B));if(z.isPlainObject(G)||G instanceof this.constructor)J(G,Y);else if(z.isString(G)&&(G=G.trim())&&!u9(G))J(c9(G),Y);else G!=null&&X(Y,G,Z);return this}get(G,Y){if(G=d(G),G){const Z=z.findKey(this,G);if(Z){const Q=this[Z];if(!Y)return Q;if(Y===!0)return d9(Q);if(z.isFunction(Y))return Y.call(this,Q,Z);if(z.isRegExp(Y))return Y.exec(Q);throw new TypeError("parser must be boolean|regexp|function")}}}has(G,Y){if(G=d(G),G){const Z=z.findKey(this,G);return!!(Z&&this[Z]!==void 0&&(!Y||UG(this,this[Z],Z,Y)))}return!1}delete(G,Y){const Z=this;let Q=!1;function X(J){if(J=d(J),J){const W=z.findKey(Z,J);if(W&&(!Y||UG(Z,Z[W],W,Y)))delete Z[W],Q=!0}}if(z.isArray(G))G.forEach(X);else X(G);return Q}clear(G){const Y=Object.keys(this);let Z=Y.length,Q=!1;while(Z--){const X=Y[Z];if(!G||UG(this,this[X],X,G,!0))delete this[X],Q=!0}return Q}normalize(G){const Y=this,Z={};return z.forEach(this,(Q,X)=>{const J=z.findKey(Z,X);if(J){Y[J]=XG(Q),delete Y[X];return}const W=G?l9(X):String(X).trim();if(W!==X)delete Y[X];Y[W]=XG(Q),Z[W]=!0}),this}concat(...G){return this.constructor.concat(this,...G)}toJSON(G){const Y=Object.create(null);return z.forEach(this,(Z,Q)=>{Z!=null&&Z!==!1&&(Y[Q]=G&&z.isArray(Z)?Z.join(", "):Z)}),Y}[Symbol.iterator](){return Object.entries(this.toJSON())[Symbol.iterator]()}toString(){return Object.entries(this.toJSON()).map(([G,Y])=>G+": "+Y).join("\n")}get[Symbol.toStringTag](){return"AxiosHeaders"}static from(G){return G instanceof this?G:new this(G)}static concat(G,...Y){const Z=new this(G);return Y.forEach((Q)=>Z.set(Q)),Z}static accessor(G){const Z=(this[tG]=this[tG]={accessors:{}}).accessors,Q=this.prototype;function X(J){const W=d(J);if(!Z[W])p9(Q,J),Z[W]=!0}return z.isArray(G)?G.forEach(X):X(G),this}}i.accessor(["Content-Type","Content-Length","Accept","Accept-Encoding","User-Agent","Authorization"]);z.reduceDescriptors(i.prototype,({value:G},Y)=>{let Z=Y[0].toUpperCase()+Y.slice(1);return{get:()=>G,set(Q){this[Z]=Q}}});z.freezeMethods(i);var q=i;z.inherits(n,S,{__CANCEL__:!0});var n9=j.isStandardBrowserEnv?function G(){return{write:function Y(Z,Q,X,J,W,B){const M=[];if(M.push(Z+"="+encodeURIComponent(Q)),z.isNumber(X))M.push("expires="+new Date(X).toGMTString());if(z.isString(J))M.push("path="+J);if(z.isString(W))M.push("domain="+W);if(B===!0)M.push("secure");document.cookie=M.join("; ")},read:function Y(Z){const Q=document.cookie.match(new RegExp("(^|;\\s*)("+Z+")=([^;]*)"));return Q?decodeURIComponent(Q[3]):null},remove:function Y(Z){this.write(Z,"",Date.now()-86400000)}}}():function G(){return{write:function Y(){},read:function Y(){return null},remove:function Y(){}}}(),r9=j.isStandardBrowserEnv?function G(){const Y=/(msie|trident)/i.test(navigator.userAgent),Z=document.createElement("a");let Q;function X(J){let W=J;if(Y)Z.setAttribute("href",W),W=Z.href;return Z.setAttribute("href",W),{href:Z.href,protocol:Z.protocol?Z.protocol.replace(/:$/,""):"",host:Z.host,search:Z.search?Z.search.replace(/^\?/,""):"",hash:Z.hash?Z.hash.replace(/^#/,""):"",hostname:Z.hostname,port:Z.port,pathname:Z.pathname.charAt(0)==="/"?Z.pathname:"/"+Z.pathname}}return Q=X(window.location.href),function J(W){const B=z.isString(W)?X(W):W;return B.protocol===Q.protocol&&B.host===Q.host}}():function G(){return function Y(){return!0}}(),e9=typeof XMLHttpRequest!=="undefined",GY=e9&&function(G){return new Promise(function Y(Z,Q){let X=G.data;const J=q.from(G.headers).normalize(),W=G.responseType;let B;function M(){if(G.cancelToken)G.cancelToken.unsubscribe(B);if(G.signal)G.signal.removeEventListener("abort",B)}let I;if(z.isFormData(X)){if(j.isStandardBrowserEnv||j.isStandardBrowserWebWorkerEnv)J.setContentType(!1);else if(!J.getContentType(/^\s*multipart\/form-data/))J.setContentType("multipart/form-data");else if(z.isString(I=J.getContentType()))J.setContentType(I.replace(/^\s*(multipart\/form-data);+/,"$1"))}let $=new XMLHttpRequest;if(G.auth){const L=G.auth.username||"",H=G.auth.password?unescape(encodeURIComponent(G.auth.password)):"";J.set("Authorization","Basic "+btoa(L+":"+H))}const w=P0(G.baseURL,G.url);$.open(G.method.toUpperCase(),U0(w,G.params,G.paramsSerializer),!0),$.timeout=G.timeout;function D(){if(!$)return;const L=q.from(("getAllResponseHeaders"in $)&&$.getAllResponseHeaders()),C={data:!W||W==="text"||W==="json"?$.responseText:$.response,status:$.status,statusText:$.statusText,headers:L,config:G,request:$};i9(function U(K){Z(K),M()},function U(K){Q(K),M()},C),$=null}if("onloadend"in $)$.onloadend=D;else $.onreadystatechange=function L(){if(!$||$.readyState!==4)return;if($.status===0&&!($.responseURL&&$.responseURL.indexOf("file:")===0))return;setTimeout(D)};if($.onabort=function L(){if(!$)return;Q(new S("Request aborted",S.ECONNABORTED,G,$)),$=null},$.onerror=function L(){Q(new S("Network Error",S.ERR_NETWORK,G,$)),$=null},$.ontimeout=function L(){let H=G.timeout?"timeout of "+G.timeout+"ms exceeded":"timeout exceeded";const C=G.transitional||w0;if(G.timeoutErrorMessage)H=G.timeoutErrorMessage;Q(new S(H,C.clarifyTimeoutError?S.ETIMEDOUT:S.ECONNABORTED,G,$)),$=null},j.isStandardBrowserEnv){const L=(G.withCredentials||r9(w))&&G.xsrfCookieName&&n9.read(G.xsrfCookieName);if(L)J.set(G.xsrfHeaderName,L)}if(X===void 0&&J.setContentType(null),("setRequestHeader"in $))z.forEach(J.toJSON(),function L(H,C){$.setRequestHeader(C,H)});if(!z.isUndefined(G.withCredentials))$.withCredentials=!!G.withCredentials;if(W&&W!=="json")$.responseType=G.responseType;if(typeof G.onDownloadProgress==="function")$.addEventListener("progress",eG(G.onDownloadProgress,!0));if(typeof G.onUploadProgress==="function"&&$.upload)$.upload.addEventListener("progress",eG(G.onUploadProgress));if(G.cancelToken||G.signal){if(B=(L)=>{if(!$)return;Q(!L||L.type?new n(null,G,$):L),$.abort(),$=null},G.cancelToken&&G.cancelToken.subscribe(B),G.signal)G.signal.aborted?B():G.signal.addEventListener("abort",B)}const P=o9(w);if(P&&j.protocols.indexOf(P)===-1){Q(new S("Unsupported protocol "+P+":",S.ERR_BAD_REQUEST,G));return}$.send(X||null)})},PG={http:A9,xhr:GY};z.forEach(PG,(G,Y)=>{if(G){try{Object.defineProperty(G,"name",{value:Y})}catch(Z){}Object.defineProperty(G,"adapterName",{value:Y})}});var G0=(G)=>`- ${G}`,YY=(G)=>z.isFunction(G)||G===null||G===!1,E0={getAdapter:(G)=>{G=z.isArray(G)?G:[G];const{length:Y}=G;let Z,Q;const X={};for(let J=0;J<Y;J++){Z=G[J];let W;if(Q=Z,!YY(Z)){if(Q=PG[(W=String(Z)).toLowerCase()],Q===void 0)throw new S(`Unknown adapter '${W}'`)}if(Q)break;X[W||"#"+J]=Q}if(!Q){const J=Object.entries(X).map(([B,M])=>`adapter ${B} `+(M===!1?"is not supported by the environment":"is not available in the build"));let W=Y?J.length>1?"since :\n"+J.map(G0).join("\n"):" "+G0(J[0]):"as no adapter specified";throw new S("There is no suitable adapter to dispatch the request "+W,"ERR_NOT_SUPPORT")}return Q},adapters:PG},Z0=(G)=>G instanceof q?G.toJSON():G,N0="1.5.1",_G={};["object","boolean","number","function","string","symbol"].forEach((G,Y)=>{_G[G]=function Z(Q){return typeof Q===G||"a"+(Y<1?"n ":" ")+G}});var Q0={};_G.transitional=function G(Y,Z,Q){function X(J,W){return"[Axios v"+N0+"] Transitional option \'"+J+"\'"+W+(Q?". "+Q:"")}return(J,W,B)=>{if(Y===!1)throw new S(X(W," has been removed"+(Z?" in "+Z:"")),S.ERR_DEPRECATED);if(Z&&!Q0[W])Q0[W]=!0,console.warn(X(W," has been deprecated since v"+Z+" and will be removed in the near future"));return Y?Y(J,W,B):!0}};var EG={assertOptions:ZY,validators:_G},y=EG.validators;class l{constructor(G){this.defaults=G,this.interceptors={request:new oG,response:new oG}}request(G,Y){if(typeof G==="string")Y=Y||{},Y.url=G;else Y=G||{};Y=v(this.defaults,Y);const{transitional:Z,paramsSerializer:Q,headers:X}=Y;if(Z!==void 0)EG.assertOptions(Z,{silentJSONParsing:y.transitional(y.boolean),forcedJSONParsing:y.transitional(y.boolean),clarifyTimeoutError:y.transitional(y.boolean)},!1);if(Q!=null)if(z.isFunction(Q))Y.paramsSerializer={serialize:Q};else EG.assertOptions(Q,{encode:y.function,serialize:y.function},!0);Y.method=(Y.method||this.defaults.method||"get").toLowerCase();let J=X&&z.merge(X.common,X[Y.method]);X&&z.forEach(["delete","get","head","post","put","patch","common"],(P)=>{delete X[P]}),Y.headers=q.concat(J,X);const W=[];let B=!0;this.interceptors.request.forEach(function P(L){if(typeof L.runWhen==="function"&&L.runWhen(Y)===!1)return;B=B&&L.synchronous,W.unshift(L.fulfilled,L.rejected)});const M=[];this.interceptors.response.forEach(function P(L){M.push(L.fulfilled,L.rejected)});let I,$=0,w;if(!B){const P=[Y0.bind(this),void 0];P.unshift.apply(P,W),P.push.apply(P,M),w=P.length,I=Promise.resolve(Y);while($<w)I=I.then(P[$++],P[$++]);return I}w=W.length;let D=Y;$=0;while($<w){const P=W[$++],L=W[$++];try{D=P(D)}catch(H){L.call(this,H);break}}try{I=Y0.call(this,D)}catch(P){return Promise.reject(P)}$=0,w=M.length;while($<w)I=I.then(M[$++],M[$++]);return I}getUri(G){G=v(this.defaults,G);const Y=P0(G.baseURL,G.url);return U0(Y,G.params,G.paramsSerializer)}}z.forEach(["delete","get","head","options"],function G(Y){l.prototype[Y]=function(Z,Q){return this.request(v(Q||{},{method:Y,url:Z,data:(Q||{}).data}))}});z.forEach(["post","put","patch"],function G(Y){function Z(Q){return function X(J,W,B){return this.request(v(B||{},{method:Y,headers:Q?{"Content-Type":"multipart/form-data"}:{},url:J,data:W}))}}l.prototype[Y]=Z(),l.prototype[Y+"Form"]=Z(!0)});var WG=l;class jG{constructor(G){if(typeof G!=="function")throw new TypeError("executor must be a function.");let Y;this.promise=new Promise(function Q(X){Y=X});const Z=this;this.promise.then((Q)=>{if(!Z._listeners)return;let X=Z._listeners.length;while(X-- >0)Z._listeners[X](Q);Z._listeners=null}),this.promise.then=(Q)=>{let X;const J=new Promise((W)=>{Z.subscribe(W),X=W}).then(Q);return J.cancel=function W(){Z.unsubscribe(X)},J},G(function Q(X,J,W){if(Z.reason)return;Z.reason=new n(X,J,W),Y(Z.reason)})}throwIfRequested(){if(this.reason)throw this.reason}subscribe(G){if(this.reason){G(this.reason);return}if(this._listeners)this._listeners.push(G);else this._listeners=[G]}unsubscribe(G){if(!this._listeners)return;const Y=this._listeners.indexOf(G);if(Y!==-1)this._listeners.splice(Y,1)}static source(){let G;return{token:new jG(function Z(Q){G=Q}),cancel:G}}}var QY=jG,NG={Continue:100,SwitchingProtocols:101,Processing:102,EarlyHints:103,Ok:200,Created:201,Accepted:202,NonAuthoritativeInformation:203,NoContent:204,ResetContent:205,PartialContent:206,MultiStatus:207,AlreadyReported:208,ImUsed:226,MultipleChoices:300,MovedPermanently:301,Found:302,SeeOther:303,NotModified:304,UseProxy:305,Unused:306,TemporaryRedirect:307,PermanentRedirect:308,BadRequest:400,Unauthorized:401,PaymentRequired:402,Forbidden:403,NotFound:404,MethodNotAllowed:405,NotAcceptable:406,ProxyAuthenticationRequired:407,RequestTimeout:408,Conflict:409,Gone:410,LengthRequired:411,PreconditionFailed:412,PayloadTooLarge:413,UriTooLong:414,UnsupportedMediaType:415,RangeNotSatisfiable:416,ExpectationFailed:417,ImATeapot:418,MisdirectedRequest:421,UnprocessableEntity:422,Locked:423,FailedDependency:424,TooEarly:425,UpgradeRequired:426,PreconditionRequired:428,TooManyRequests:429,RequestHeaderFieldsTooLarge:431,UnavailableForLegalReasons:451,InternalServerError:500,NotImplemented:501,BadGateway:502,ServiceUnavailable:503,GatewayTimeout:504,HttpVersionNotSupported:505,VariantAlsoNegotiates:506,InsufficientStorage:507,LoopDetected:508,NotExtended:510,NetworkAuthenticationRequired:511};Object.entries(NG).forEach(([G,Y])=>{NG[Y]=G});var JY=NG,N=D0(AG);N.Axios=WG;N.CanceledError=n;N.CancelToken=QY;N.isCancel=H0;N.VERSION=N0;N.toFormData=$G;N.AxiosError=S;N.Cancel=N.CanceledError;N.all=function G(Y){return Promise.all(Y)};N.spread=XY;N.isAxiosError=WY;N.mergeConfig=v;N.AxiosHeaders=q;N.formToJSON=(G)=>S0(z.isHTMLForm(G)?new FormData(G):G);N.getAdapter=E0.getAdapter;N.HttpStatusCode=JY;N.default=N;R0.exports=N});var _0=R((zG,A0)=>{(function(G,Y){typeof zG=="object"&&typeof A0!="undefined"?Y(zG,C0()):typeof define=="function"&&define.amd?define(["exports","axios"],Y):Y((G=typeof globalThis=="undefined"?G||self:globalThis)["wakatime-client"]={},G.axios)})(zG,function(G,Y){function Z(U){return U&&typeof U=="object"&&("default"in U)?U:{default:U}}function Q(U,K){if(!(U instanceof K))throw new TypeError("Cannot call a class as a function")}function X(U,K){for(var T,F=0;F<K.length;F++)(T=K[F]).enumerable=T.enumerable||!1,T.configurable=!0,("value"in T)&&(T.writable=!0),Object.defineProperty(U,T.key,T)}function J(U,K,T){return(K in U)?Object.defineProperty(U,K,{value:T,enumerable:!0,configurable:!0,writable:!0}):U[K]=T,U}function W(){return(W=Object.assign||function(U){for(var K,T=1;T<arguments.length;T++)for(var F in K=arguments[T])Object.prototype.hasOwnProperty.call(K,F)&&(U[F]=K[F]);return U}).apply(this,arguments)}function B(U,K){if(U==null)return{};var T,F,V=function(A,u1){if(A==null)return{};var GG,YG,uG={},lG=Object.keys(A);for(YG=0;YG<lG.length;YG++)GG=lG[YG],0<=u1.indexOf(GG)||(uG[GG]=A[GG]);return uG}(U,K);if(Object.getOwnPropertySymbols){var E=Object.getOwnPropertySymbols(U);for(F=0;F<E.length;F++)T=E[F],!(0<=K.indexOf(T))&&Object.prototype.propertyIsEnumerable.call(U,T)&&(V[T]=U[T])}return V}var M,I=Z(Y),$=Object.freeze({LAST_7_DAYS:"LAST_7_DAYS",LAST_30_DAYS:"LAST_30_DAYS",LAST_6_MONTHS:"LAST_6_MONTHS",LAST_YEAR:"LAST_YEAR"}),w=function(U){var{dateRange:K,projectName:T}=U,F=T===void 0?null:T,V=U.branchNames,E=V===void 0?[]:V;return{start:K.startDate,end:K.endDate,project:F,branches:E.join(",")}},D=function(){var U=0<arguments.length&&arguments[0]!==void 0?arguments[0]:{},K=U.timeout,T=K===void 0?null:K,F=U.useWritesOnly,V=F===void 0?null:F,E=U.projectName,A=E===void 0?null:E;return{timeout:T,writes_only:V,project:A}},P=function(U){var{date:K,projectName:T}=U,F=T===void 0?null:T,V=U.branchNames;return{date:K,project:F,branches:(V===void 0?[]:V).join(",")}},L=function(){var U=0<arguments.length&&arguments[0]!==void 0?arguments[0]:{},K=U.authorUsername,T=K===void 0?null:K,F=U.pageNumber,V=F===void 0?null:F;return{author:T,page:V}},H=Object.freeze((J(M={},$.LAST_7_DAYS,"last_7_days"),J(M,$.LAST_30_DAYS,"last_30_days"),J(M,$.LAST_6_MONTHS,"last_6_months"),J(M,$.LAST_YEAR,"last_year"),M)),C=function(){function U(K){var T=1<arguments.length&&arguments[1]!==void 0?arguments[1]:"https://wakatime.com/api/v1/";Q(this,U),this.apiKey=K,this.axiosConfiguration=I.default.create({baseURL:T,headers:{Authorization:"Basic ".concat(Buffer.from(this.apiKey).toString("base64"))}})}return function(K,T,F){T&&X(K.prototype,T),F&&X(K,F)}(U,[{key:"getUser",value:function(K){return this.axiosConfiguration.get("users/".concat(K)).then(function(T){return T.data})}},{key:"getMe",value:function(){return this.axiosConfiguration.get("users/current").then(function(K){return K.data})}},{key:"getTeams",value:function(K){return this.axiosConfiguration.get("users/".concat(K,"/teams")).then(function(T){return T.data})}},{key:"getMyTeams",value:function(){return this.axiosConfiguration.get("users/current/teams").then(function(K){return K.data})}},{key:"getUserAgents",value:function(K){return this.axiosConfiguration.get("users/".concat(K,"/user_agents")).then(function(T){return T.data})}},{key:"getMyUserAgents",value:function(){return this.axiosConfiguration.get("users/current/user_agents").then(function(K){return K.data})}},{key:"getTeamMembers",value:function(K){var{userId:T,teamId:F}=K;return this.axiosConfiguration.get("users/".concat(T,"/teams/").concat(F,"/members")).then(function(V){return V.data})}},{key:"getMyTeamMembers",value:function(K){return this.axiosConfiguration.get("users/current/teams/".concat(K,"/members")).then(function(T){return T.data})}},{key:"getTeamMemberSummary",value:function(K){var{userId:T,teamId:F,teamMemberId:V}=K,E=B(K,["userId","teamId","teamMemberId"]);return this.axiosConfiguration.get("users/".concat(T,"/teams/").concat(F,"/members/").concat(V,"/summaries"),{params:w(E)}).then(function(A){return A.data})}},{key:"getMyTeamMemberSummary",value:function(K){var{teamId:T,teamMemberId:F}=K,V=B(K,["teamId","teamMemberId"]);return this.axiosConfiguration.get("users/current/teams/".concat(T,"/members/").concat(F,"/summaries"),{params:w(V)}).then(function(E){return E.data})}},{key:"getUserSummary",value:function(K){var T=K.userId,F=B(K,["userId"]);return this.axiosConfiguration.get("users/".concat(T,"/summaries"),{params:w(F)}).then(function(V){return V.data})}},{key:"getMySummary",value:function(K){var T=W({},K);return this.axiosConfiguration.get("users/current/summaries",{params:w(T)}).then(function(F){return F.data})}},{key:"getUserStats",value:function(K){var{userId:T,range:F}=K,V=B(K,["userId","range"]);return this.axiosConfiguration.get("users/".concat(T,"/stats/").concat(H[F]),{params:D(V)}).then(function(E){return E.data})}},{key:"getMyStats",value:function(K){var T=K.range,F=B(K,["range"]);return this.axiosConfiguration.get("users/current/stats/".concat(H[T]),{params:D(F)}).then(function(V){return V.data})}},{key:"getProjects",value:function(K){return this.axiosConfiguration.get("users/".concat(K,"/projects")).then(function(T){return T.data})}},{key:"getMyProjects",value:function(){return this.axiosConfiguration.get("users/current/projects").then(function(K){return K.data})}},{key:"getLeaders",value:function(){var K=0<arguments.length&&arguments[0]!==void 0?arguments[0]:{},T=K.language,F=T===void 0?null:T,V=K.pageNumber,E=V===void 0?null:V;return this.axiosConfiguration.get("leaders",{params:{language:F,page:E}}).then(function(A){return A.data})}},{key:"getHeartbeats",value:function(K){var{userId:T,date:F}=K;return this.axiosConfiguration.get("users/".concat(T,"/heartbeats"),{params:{date:F}}).then(function(V){return V.data})}},{key:"getMyHeartbeats",value:function(K){return this.axiosConfiguration.get("users/current/heartbeats",{params:{date:K}}).then(function(T){return T.data})}},{key:"getGoals",value:function(K){return this.axiosConfiguration.get("users/".concat(K,"/goals")).then(function(T){return T.data})}},{key:"getMyGoals",value:function(){return this.axiosConfiguration.get("users/current/goals").then(function(K){return K.data})}},{key:"getDurations",value:function(K){var T=K.userId,F=B(K,["userId"]);return this.axiosConfiguration.get("users/".concat(T,"/durations"),{params:P(F)}).then(function(V){return V.data})}},{key:"getMyDurations",value:function(K){var T=W({},K);return this.axiosConfiguration.get("users/current/durations",{params:P(T)}).then(function(F){return F.data})}},{key:"getCommits",value:function(K){var{userId:T,projectName:F}=K,V=B(K,["userId","projectName"]);return this.axiosConfiguration.get("users/".concat(T,"/projects/").concat(F,"/commits"),{params:L(V)}).then(function(E){return E.data})}},{key:"getMyCommits",value:function(K){var T=K.projectName,F=B(K,["projectName"]);return this.axiosConfiguration.get("users/current/projects/".concat(T,"/commits"),{params:L(F)}).then(function(V){return V.data})}},{key:"getMetadata",value:function(){return this.axiosConfiguration.get("meta")}},{key:"getOrganizations",value:function(K){return this.axiosConfiguration.get("users/".concat(K,"/orgs")).then(function(T){return T.data})}},{key:"getMyOrganizations",value:function(){return this.axiosConfiguration.get("users/current/orgs").then(function(K){return K.data})}},{key:"getOrganizationDashboards",value:function(K){var{userId:T,organizationId:F}=K;return this.axiosConfiguration.get("users/".concat(T,"/orgs/").concat(F)).then(function(V){return V.data})}},{key:"getMyOrganizationDashboards",value:function(K){return this.getOrganizationDashboards({userId:"current",organizationId:K})}},{key:"getOrganizationDashboardMembers",value:function(K){var{userId:T,organizationId:F,dashboardId:V}=K;return this.axiosConfiguration.get("users/".concat(T,"/orgs/").concat(F,"/dashboards/").concat(V,"/members")).then(function(E){return E.data})}},{key:"getMyOrganizationDashboardMembers",value:function(K){var{organizationId:T,dashboardId:F}=K;return this.getOrganizationDashboardMembers({userId:"current",organizationId:T,dashboardId:F})}},{key:"getOrganizationDashboardMemberSummaries",value:function(K){var{userId:T,organizationId:F,dashboardId:V,memberId:E}=K;return this.axiosConfiguration.get("users/".concat(T,"/orgs/").concat(F,"/dashboards/").concat(V,"/members/").concat(E,"/summaries")).then(function(A){return A.data})}},{key:"getMyOrganizationDashboardMemberSummaries",value:function(K){var{organizationId:T,dashboardId:F,memberId:V}=K;return this.getOrganizationDashboardMemberSummaries({userId:"current",organizationId:T,dashboardId:F,memberId:V})}},{key:"getOrganizationDashboardMemberDurations",value:function(K){var{userId:T,organizationId:F,dashboardId:V,memberId:E}=K;return this.axiosConfiguration.get("users/".concat(T,"/orgs/").concat(F,"/dashboards/").concat(V,"/members/").concat(E,"/durations")).then(function(A){return A.data})}},{key:"getMyOrganizationDashboardMemberDurations",value:function(K){var{organizationId:T,dashboardId:F,memberId:V}=K;return this.getOrganizationDashboardMemberDurations({userId:"current",organizationId:T,dashboardId:F,memberId:V})}}]),U}();G.RANGE=$,G.WakaTimeClient=C,Object.defineProperty(G,"__esModule",{value:!0})})});var a=R((j0)=>{var BY=function(){if(typeof navigator==="object"&&("userAgent"in navigator))return navigator.userAgent;if(typeof process==="object"&&("version"in process))return`Node.js/${process.version.substr(1)} (${process.platform}; ${process.arch})`;return"<environment undetectable>"};Object.defineProperty(j0,"__esModule",{value:!0});j0.getUserAgent=BY});var O0=R((tZ,q0)=>{var x0=function(G,Y,Z,Q){if(typeof Z!=="function")throw new Error("method for before hook must be a function");if(!Q)Q={};if(Array.isArray(Y))return Y.reverse().reduce(function(X,J){return x0.bind(null,G,J,X,Q)},Z)();return Promise.resolve().then(function(){if(!G.registry[Y])return Z(Q);return G.registry[Y].reduce(function(X,J){return J.hook.bind(null,X,Q)},Z)()})};q0.exports=x0});var y0=R((eZ,b0)=>{var $Y=function(G,Y,Z,Q){var X=Q;if(!G.registry[Z])G.registry[Z]=[];if(Y==="before")Q=function(J,W){return Promise.resolve().then(X.bind(null,W)).then(J.bind(null,W))};if(Y==="after")Q=function(J,W){var B;return Promise.resolve().then(J.bind(null,W)).then(function(M){return B=M,X(B,W)}).then(function(){return B})};if(Y==="error")Q=function(J,W){return Promise.resolve().then(J.bind(null,W)).catch(function(B){return X(B,W)})};G.registry[Z].push({hook:Q,orig:X})};b0.exports=$Y});var k0=R((G5,v0)=>{var zY=function(G,Y,Z){if(!G.registry[Y])return;var Q=G.registry[Y].map(function(X){return X.orig}).indexOf(Z);if(Q===-1)return;G.registry[Y].splice(Q,1)};v0.exports=zY});var u0=R((Y5,s)=>{var c0=function(G,Y,Z){var Q=g0(TY,null).apply(null,Z?[Y,Z]:[Y]);G.api={remove:Q},G.remove=Q,["before","error","after","wrap"].forEach(function(X){var J=Z?[Y,X,Z]:[Y,X];G[X]=G.api[X]=g0(MY,null).apply(null,J)})},IY=function(){var G="h",Y={registry:{}},Z=f0.bind(null,Y,G);return c0(Z,Y,G),Z},d0=function(){var G={registry:{}},Y=f0.bind(null,G);return c0(Y,G),Y},h=function(){if(!m0)console.warn('[before-after-hook]: "Hook()" repurposing warning, use "Hook.Collection()". Read more: https://git.io/upgrade-before-after-hook-to-1.4'),m0=!0;return d0()},f0=O0(),MY=y0(),TY=k0(),h0=Function.bind,g0=h0.bind(h0),m0=!1;h.Singular=IY.bind();h.Collection=d0.bind();s.exports=h;s.exports.Hook=h;s.exports.Singular=h.Singular;s.exports.Collection=h.Collection});var l0,MG;var xG=b(()=>{l0=function(G){return Object.prototype.toString.call(G)==="[object Object]"},MG=function(G){var Y,Z;if(l0(G)===!1)return!1;if(Y=G.constructor,Y===void 0)return!0;if(Z=Y.prototype,l0(Z)===!1)return!1;if(Z.hasOwnProperty("isPrototypeOf")===!1)return!1;return!0};/*!
 * is-plain-object <https://github.com/jonschlinkert/is-plain-object>
 *
 * Copyright (c) 2014-2017, Jon Schlinkert.
 * Released under the MIT License.
 */});var n0,VY,a0,p0,OG,wY,HY,PY,i0,s0,m,r,g,qG,EY,NY,DY,r0,RY,o0,FY,LY,UY,SY,t0;var e0=b(()=>{n0=FG(a(),1);xG();VY=function(G){if(!G)return{};return Object.keys(G).reduce((Y,Z)=>{return Y[Z.toLowerCase()]=G[Z],Y},{})},a0=function(G,Y){const Z=Object.assign({},G);return Object.keys(Y).forEach((Q)=>{if(MG(Y[Q]))if(!(Q in G))Object.assign(Z,{[Q]:Y[Q]});else Z[Q]=a0(G[Q],Y[Q]);else Object.assign(Z,{[Q]:Y[Q]})}),Z},p0=function(G){for(let Y in G)if(G[Y]===void 0)delete G[Y];return G},OG=function(G,Y,Z){if(typeof Y==="string"){let[X,J]=Y.split(" ");Z=Object.assign(J?{method:X,url:J}:{url:X},Z)}else Z=Object.assign({},Y);Z.headers=VY(Z.headers),p0(Z),p0(Z.headers);const Q=a0(G||{},Z);if(Z.url==="/graphql"){if(G&&G.mediaType.previews?.length)Q.mediaType.previews=G.mediaType.previews.filter((X)=>!Q.mediaType.previews.includes(X)).concat(Q.mediaType.previews);Q.mediaType.previews=(Q.mediaType.previews||[]).map((X)=>X.replace(/-preview/,""))}return Q},wY=function(G,Y){const Z=/\?/.test(G)?"&":"?",Q=Object.keys(Y);if(Q.length===0)return G;return G+Z+Q.map((X)=>{if(X==="q")return"q="+Y.q.split("+").map(encodeURIComponent).join("+");return`${X}=${encodeURIComponent(Y[X])}`}).join("&")},HY=function(G){return G.replace(/^\W+|\W+$/g,"").split(/,/)},PY=function(G){const Y=G.match(SY);if(!Y)return[];return Y.map(HY).reduce((Z,Q)=>Z.concat(Q),[])},i0=function(G,Y){return Object.keys(G).filter((Z)=>!Y.includes(Z)).reduce((Z,Q)=>{return Z[Q]=G[Q],Z},{})},s0=function(G){return G.split(/(%[0-9A-Fa-f]{2})/g).map(function(Y){if(!/%[0-9A-Fa-f]/.test(Y))Y=encodeURI(Y).replace(/%5B/g,"[").replace(/%5D/g,"]");return Y}).join("")},m=function(G){return encodeURIComponent(G).replace(/[!'()*]/g,function(Y){return"%"+Y.charCodeAt(0).toString(16).toUpperCase()})},r=function(G,Y,Z){if(Y=G==="+"||G==="#"?s0(Y):m(Y),Z)return m(Z)+"="+Y;else return Y},g=function(G){return G!==void 0&&G!==null},qG=function(G){return G===";"||G==="&"||G==="?"},EY=function(G,Y,Z,Q){var X=G[Z],J=[];if(g(X)&&X!=="")if(typeof X==="string"||typeof X==="number"||typeof X==="boolean"){if(X=X.toString(),Q&&Q!=="*")X=X.substring(0,parseInt(Q,10));J.push(r(Y,X,qG(Y)?Z:""))}else if(Q==="*")if(Array.isArray(X))X.filter(g).forEach(function(W){J.push(r(Y,W,qG(Y)?Z:""))});else Object.keys(X).forEach(function(W){if(g(X[W]))J.push(r(Y,X[W],W))});else{const W=[];if(Array.isArray(X))X.filter(g).forEach(function(B){W.push(r(Y,B))});else Object.keys(X).forEach(function(B){if(g(X[B]))W.push(m(B)),W.push(r(Y,X[B].toString()))});if(qG(Y))J.push(m(Z)+"="+W.join(","));else if(W.length!==0)J.push(W.join(","))}else if(Y===";"){if(g(X))J.push(m(Z))}else if(X===""&&(Y==="&"||Y==="?"))J.push(m(Z)+"=");else if(X==="")J.push("");return J},NY=function(G){return{expand:DY.bind(null,G)}},DY=function(G,Y){var Z=["+","#",".","/",";","?","&"];return G.replace(/\{([^\{\}]+)\}|([^\{\}]+)/g,function(Q,X,J){if(X){let B="";const M=[];if(Z.indexOf(X.charAt(0))!==-1)B=X.charAt(0),X=X.substr(1);if(X.split(/,/g).forEach(function(I){var $=/([^:\*]*)(?::(\d+)|(\*))?/.exec(I);M.push(EY(Y,B,$[1],$[2]||$[3]))}),B&&B!=="+"){var W=",";if(B==="?")W="&";else if(B!=="#")W=B;return(M.length!==0?B:"")+M.join(W)}else return M.join(",")}else return s0(J)})},r0=function(G){let Y=G.method.toUpperCase(),Z=(G.url||"/").replace(/:([a-z]\w+)/g,"{$1}"),Q=Object.assign({},G.headers),X,J=i0(G,["method","baseUrl","url","headers","request","mediaType"]);const W=PY(Z);if(Z=NY(Z).expand(J),!/^http/.test(Z))Z=G.baseUrl+Z;const B=Object.keys(G).filter(($)=>W.includes($)).concat("baseUrl"),M=i0(J,B);if(!/application\/octet-stream/i.test(Q.accept)){if(G.mediaType.format)Q.accept=Q.accept.split(/,/).map(($)=>$.replace(/application\/vnd(\.\w+)(\.v3)?(\.\w+)?(\+json)?$/,`application/vnd\$1\$2.${G.mediaType.format}`)).join(",");if(Z.endsWith("/graphql")){if(G.mediaType.previews?.length){const $=Q.accept.match(/[\w-]+(?=-preview)/g)||[];Q.accept=$.concat(G.mediaType.previews).map((w)=>{const D=G.mediaType.format?`.${G.mediaType.format}`:"+json";return`application/vnd.github.${w}-preview${D}`}).join(",")}}}if(["GET","HEAD"].includes(Y))Z=wY(Z,M);else if("data"in M)X=M.data;else if(Object.keys(M).length)X=M;if(!Q["content-type"]&&typeof X!=="undefined")Q["content-type"]="application/json; charset=utf-8";if(["PATCH","PUT"].includes(Y)&&typeof X==="undefined")X="";return Object.assign({method:Y,url:Z,headers:Q},typeof X!=="undefined"?{body:X}:null,G.request?{request:G.request}:null)},RY=function(G,Y,Z){return r0(OG(G,Y,Z))},o0=function(G,Y){const Z=OG(G,Y),Q=RY.bind(null,Z);return Object.assign(Q,{DEFAULTS:Z,defaults:o0.bind(null,Z),merge:OG.bind(null,Z),parse:r0})},FY="9.0.1",LY=`octokit-endpoint.js/${FY} ${n0.getUserAgent()}`,UY={method:"GET",baseUrl:"https://api.github.com",headers:{accept:"application/vnd.github.v3+json","user-agent":LY},mediaType:{format:""}},SY=/\{[^}]+\}/g,t0=o0(null,UY)});class TG extends Error{constructor(G){super(G);if(Error.captureStackTrace)Error.captureStackTrace(this,this.constructor);this.name="Deprecation"}}var G1=b(()=>{});var Q1=R((J5,Z1)=>{var Y1=function(G,Y){if(G&&Y)return Y1(G)(Y);if(typeof G!=="function")throw new TypeError("need wrapper function");return Object.keys(G).forEach(function(Q){Z[Q]=G[Q]}),Z;function Z(){var Q=new Array(arguments.length);for(var X=0;X<Q.length;X++)Q[X]=arguments[X];var J=G.apply(this,Q),W=Q[Q.length-1];if(typeof J==="function"&&J!==W)Object.keys(W).forEach(function(B){J[B]=W[B]});return J}};Z1.exports=Y1});var J1=R((B5,bG)=>{var IG=function(G){var Y=function(){if(Y.called)return Y.value;return Y.called=!0,Y.value=G.apply(this,arguments)};return Y.called=!1,Y},W1=function(G){var Y=function(){if(Y.called)throw new Error(Y.onceError);return Y.called=!0,Y.value=G.apply(this,arguments)},Z=G.name||"Function wrapped with `once`";return Y.onceError=Z+" shouldn't be called more than once",Y.called=!1,Y},X1=Q1();bG.exports=X1(IG);bG.exports.strict=X1(W1);IG.proto=IG(function(){Object.defineProperty(Function.prototype,"once",{value:function(){return IG(this)},configurable:!0}),Object.defineProperty(Function.prototype,"onceStrict",{value:function(){return W1(this)},configurable:!0})})});var yG,CY,AY,f;var B1=b(()=>{G1();yG=FG(J1(),1),CY=yG.default((G)=>console.warn(G)),AY=yG.default((G)=>console.warn(G)),f=class extends Error{constructor(G,Y,Z){super(G);if(Error.captureStackTrace)Error.captureStackTrace(this,this.constructor);this.name="HttpError",this.status=Y;let Q;if(("headers"in Z)&&typeof Z.headers!=="undefined")Q=Z.headers;if("response"in Z)this.response=Z.response,Q=Z.response.headers;const X=Object.assign({},Z.request);if(Z.request.headers.authorization)X.headers=Object.assign({},Z.request.headers,{authorization:Z.request.headers.authorization.replace(/ .*$/," [REDACTED]")});X.url=X.url.replace(/\bclient_secret=\w+/g,"client_secret=[REDACTED]").replace(/\baccess_token=\w+/g,"access_token=[REDACTED]"),this.request=X,Object.defineProperty(this,"code",{get(){return CY(new TG("[@octokit/request-error] `error.code` is deprecated, use `error.status`.")),Y}}),Object.defineProperty(this,"headers",{get(){return AY(new TG("[@octokit/request-error] `error.headers` is deprecated, use `error.response.headers`.")),Q||{}}})}}});var o={};ZG(o,{request:()=>{{return qY}}});async function vG(G){const Y=G.headers.get("content-type");if(/application\/json/.test(Y))return G.json();if(!Y||/^text\/|charset=utf-8$/.test(Y))return G.text();return jY(G)}var $1,jY,K1,xY,kG,_Y,qY;var t=b(()=>{e0();$1=FG(a(),1);xG();B1();jY=function(G){return G.arrayBuffer()},K1=function(G){const Y=G.request&&G.request.log?G.request.log:console,Z=G.request?.parseSuccessResponseBody!==!1;if(MG(G.body)||Array.isArray(G.body))G.body=JSON.stringify(G.body);let Q={},X,J,{fetch:W}=globalThis;if(G.request?.fetch)W=G.request.fetch;if(!W)throw new Error("fetch is not set. Please pass a fetch implementation as new Octokit({ request: { fetch }}). Learn more at https://github.com/octokit/octokit.js/#fetch-missing");return W(G.url,{method:G.method,body:G.body,headers:G.headers,signal:G.request?.signal,...G.body&&{duplex:"half"}}).then(async(B)=>{J=B.url,X=B.status;for(let M of B.headers)Q[M[0]]=M[1];if("deprecation"in Q){const M=Q.link&&Q.link.match(/<([^>]+)>; rel="deprecation"/),I=M&&M.pop();Y.warn(`[@octokit/request] "${G.method} ${G.url}" is deprecated. It is scheduled to be removed on ${Q.sunset}${I?`. See ${I}`:""}`)}if(X===204||X===205)return;if(G.method==="HEAD"){if(X<400)return;throw new f(B.statusText,X,{response:{url:J,status:X,headers:Q,data:void 0},request:G})}if(X===304)throw new f("Not modified",X,{response:{url:J,status:X,headers:Q,data:await vG(B)},request:G});if(X>=400){const M=await vG(B);throw new f(xY(M),X,{response:{url:J,status:X,headers:Q,data:M},request:G})}return Z?await vG(B):B.body}).then((B)=>{return{status:X,url:J,headers:Q,data:B}}).catch((B)=>{if(B instanceof f)throw B;else if(B.name==="AbortError")throw B;let M=B.message;if(B instanceof TypeError&&("cause"in B)&&typeof B.cause==="string")M=B.cause;throw new f(M,500,{request:G})})};xY=function(G){if(typeof G==="string")return G;if("message"in G){if(Array.isArray(G.errors))return`${G.message}: ${G.errors.map(JSON.stringify).join(", ")}`;return G.message}return`Unknown error: ${JSON.stringify(G)}`},kG=function(G,Y){const Z=G.defaults(Y);return Object.assign(function(X,J){const W=Z.merge(X,J);if(!W.request||!W.request.hook)return K1(Z.parse(W));const B=(M,I)=>{return K1(Z.parse(Z.merge(M,I)))};return Object.assign(B,{endpoint:Z,defaults:kG.bind(null,Z)}),W.request.hook(B,W)},{endpoint:Z,defaults:kG.bind(null,Z)})},_Y="8.1.3",qY=kG(t0,{headers:{"user-agent":`octokit-request.js/${_Y} ${$1.getUserAgent()}`}})});var F1=R((U5,I1)=>{var cY=function(G){return`Request failed due to following response errors:
`+G.errors.map((Y)=>` - ${Y.message}`).join("\n")},lY=function(G,Y,Z){if(Z){if(typeof Y==="string"&&("query"in Z))return Promise.reject(new Error('[@octokit/graphql] "query" cannot be used as variable name'));for(let W in Z){if(!uY.includes(W))continue;return Promise.reject(new Error(`[@octokit/graphql] "${W}" cannot be used as variable name`))}}const Q=typeof Y==="string"?Object.assign({query:Y},Z):Y,X=Object.keys(Q).reduce((W,B)=>{if(dY.includes(B))return W[B]=Q[B],W;if(!W.variables)W.variables={};return W.variables[B]=Q[B],W},{}),J=Q.baseUrl||G.endpoint.DEFAULTS.baseUrl;if(z1.test(J))X.url=J.replace(z1,"/api/graphql");return G(X).then((W)=>{if(W.data.errors){const B={};for(let M of Object.keys(W.headers))B[M]=W.headers[M];throw new T1(X,B,W.data)}return W.data.data})},gG=function(G,Y){const Z=G.defaults(Y);return Object.assign((X,J)=>{return lY(Z,X,J)},{defaults:gG.bind(null,Z),endpoint:Z.endpoint})},iY=function(G){return gG(G,{method:"POST",url:"/graphql"})},hG=Object.defineProperty,OY=Object.getOwnPropertyDescriptor,bY=Object.getOwnPropertyNames,yY=Object.prototype.hasOwnProperty,vY=(G,Y)=>{for(var Z in Y)hG(G,Z,{get:Y[Z],enumerable:!0})},kY=(G,Y,Z,Q)=>{if(Y&&typeof Y==="object"||typeof Y==="function"){for(let X of bY(Y))if(!yY.call(G,X)&&X!==Z)hG(G,X,{get:()=>Y[X],enumerable:!(Q=OY(Y,X))||Q.enumerable})}return G},hY=(G)=>kY(hG({},"__esModule",{value:!0}),G),M1={};vY(M1,{GraphqlResponseError:()=>T1,graphql:()=>pY,withCustomRequest:()=>iY});I1.exports=hY(M1);var gY=(t(),O(o)),mY=a(),fY="7.0.2",F5=(t(),O(o)),L5=(t(),O(o)),T1=class extends Error{constructor(G,Y,Z){super(cY(Z));if(this.request=G,this.headers=Y,this.response=Z,this.name="GraphqlResponseError",this.errors=Z.errors,this.data=Z.data,Error.captureStackTrace)Error.captureStackTrace(this,this.constructor)}},dY=["method","baseUrl","url","headers","request","query","mediaType"],uY=["query","method","url"],z1=/\/api\/v3\/?$/,pY=gG(gY.request,{headers:{"user-agent":`octokit-graphql.js/${fY} ${(0,mY.getUserAgent)()}`},method:"POST",url:"/graphql"})});var L1={};ZG(L1,{createTokenAuth:()=>{{return eY}}});async function rY(G){const Y=G.split(/\./).length===3,Z=nY.test(G)||aY.test(G),Q=sY.test(G);return{type:"token",token:G,tokenType:Y?"app":Z?"installation":Q?"user-to-server":"oauth"}}async function tY(G,Y,Z,Q){const X=Y.endpoint.merge(Z,Q);return X.headers.authorization=oY(G),Y(X)}var oY,nY,aY,sY,eY;var U1=b(()=>{oY=function(G){if(G.split(/\./).length===3)return`bearer ${G}`;return`token ${G}`};nY=/^v1\./,aY=/^ghs_/,sY=/^ghu_/,eY=function G(Y){if(!Y)throw new Error("[@octokit/auth-token] No token passed to createTokenAuth");if(typeof Y!=="string")throw new Error("[@octokit/auth-token] Token passed to createTokenAuth is not a string");return Y=Y.replace(/^(token|bearer) +/i,""),Object.assign(rY.bind(null,Y),{hook:tY.bind(null,Y)})}});var P1=R((w5,H1)=>{var{defineProperty:mG,getOwnPropertyDescriptor:GZ,getOwnPropertyNames:YZ}=Object,ZZ=Object.prototype.hasOwnProperty,QZ=(G,Y)=>{for(var Z in Y)mG(G,Z,{get:Y[Z],enumerable:!0})},XZ=(G,Y,Z,Q)=>{if(Y&&typeof Y==="object"||typeof Y==="function"){for(let X of YZ(Y))if(!ZZ.call(G,X)&&X!==Z)mG(G,X,{get:()=>Y[X],enumerable:!(Q=GZ(Y,X))||Q.enumerable})}return G},WZ=(G)=>XZ(mG({},"__esModule",{value:!0}),G),S1={};QZ(S1,{Octokit:()=>zZ});H1.exports=WZ(S1);var JZ=a(),BZ=u0(),V1=(t(),O(o)),KZ=F1(),$Z=(U1(),O(L1)),w1="5.0.1",zZ=class{static{this.VERSION=w1}static defaults(G){return class extends this{constructor(...Z){const Q=Z[0]||{};if(typeof G==="function"){super(G(Q));return}super(Object.assign({},G,Q,Q.userAgent&&G.userAgent?{userAgent:`${Q.userAgent} ${G.userAgent}`}:null))}}}static{this.plugins=[]}static plugin(...G){const Y=this.plugins;return class extends this{static{this.plugins=Y.concat(G.filter((Q)=>!Y.includes(Q)))}}}constructor(G={}){const Y=new BZ.Collection,Z={baseUrl:V1.request.endpoint.DEFAULTS.baseUrl,headers:{},request:Object.assign({},G.request,{hook:Y.bind(null,"request")}),mediaType:{previews:[],format:""}};if(Z.headers["user-agent"]=[G.userAgent,`octokit-core.js/${w1} ${(0,JZ.getUserAgent)()}`].filter(Boolean).join(" "),G.baseUrl)Z.baseUrl=G.baseUrl;if(G.previews)Z.mediaType.previews=G.previews;if(G.timeZone)Z.headers["time-zone"]=G.timeZone;if(this.request=V1.request.defaults(Z),this.graphql=(0,KZ.withCustomRequest)(this.request).defaults(Z),this.log=Object.assign({debug:()=>{},info:()=>{},warn:console.warn.bind(console),error:console.error.bind(console)},G.log),this.hook=Y,!G.authStrategy)if(!G.auth)this.auth=async()=>({type:"unauthenticated"});else{const X=(0,$Z.createTokenAuth)(G.auth);Y.wrap("request",X.hook),this.auth=X}else{const{authStrategy:X,...J}=G,W=X(Object.assign({request:this.request,log:this.log,octokit:this,octokitOptions:J},G.auth));Y.wrap("request",W.hook),this.auth=W}this.constructor.plugins.forEach((X)=>{Object.assign(this,X(this,G))})}}});var N1={};ZG(N1,{requestLog:()=>{{return E1}}});var E1,MZ;var D1=b(()=>{E1=function(G){G.hook.wrap("request",(Y,Z)=>{G.log.debug("request",Z);const Q=Date.now(),X=G.request.endpoint.parse(Z),J=X.url.replace(Z.baseUrl,"");return Y(Z).then((W)=>{return G.log.info(`${X.method} ${J} - ${W.status} in ${Date.now()-Q}ms`),W}).catch((W)=>{throw G.log.info(`${X.method} ${J} - ${W.status} in ${Date.now()-Q}ms`),W})})},MZ="4.0.0";E1.VERSION=MZ});var q1=R((E5,x1)=>{var SZ=function(G){if(!G.data)return{...G,data:[]};if(!(("total_count"in G.data)&&!("url"in G.data)))return G;const Z=G.data.incomplete_results,Q=G.data.repository_selection,X=G.data.total_count;delete G.data.incomplete_results,delete G.data.repository_selection,delete G.data.total_count;const J=Object.keys(G.data)[0],W=G.data[J];if(G.data=W,typeof Z!=="undefined")G.data.incomplete_results=Z;if(typeof Q!=="undefined")G.data.repository_selection=Q;return G.data.total_count=X,G},cG=function(G,Y,Z){const Q=typeof Y==="function"?Y.endpoint(Z):G.request.endpoint(Y,Z),X=typeof Y==="function"?Y:G.request,J=Q.method,W=Q.headers;let B=Q.url;return{[Symbol.asyncIterator]:()=>({async next(){if(!B)return{done:!0};try{const M=await X({method:J,url:B,headers:W}),I=SZ(M);return B=((I.headers.link||"").match(/<([^>]+)>;\s*rel="next"/)||[])[1],{value:I}}catch(M){if(M.status!==409)throw M;return B="",{value:{status:200,headers:{},data:[]}}}}})}},C1=function(G,Y,Z,Q){if(typeof Z==="function")Q=Z,Z=void 0;return A1(G,[],cG(G,Y,Z)[Symbol.asyncIterator](),Q)},A1=function(G,Y,Z,Q){return Z.next().then((X)=>{if(X.done)return Y;let J=!1;function W(){J=!0}if(Y=Y.concat(Q?Q(X.value,W):X.value.data),J)return Y;return A1(G,Y,Z,Q)})},PZ=function(G){if(typeof G==="string")return _1.includes(G);else return!1},j1=function(G){return{paginate:Object.assign(C1.bind(null,G),{iterator:cG.bind(null,G)})}},fG=Object.defineProperty,TZ=Object.getOwnPropertyDescriptor,IZ=Object.getOwnPropertyNames,FZ=Object.prototype.hasOwnProperty,LZ=(G,Y)=>{for(var Z in Y)fG(G,Z,{get:Y[Z],enumerable:!0})},UZ=(G,Y,Z,Q)=>{if(Y&&typeof Y==="object"||typeof Y==="function"){for(let X of IZ(Y))if(!FZ.call(G,X)&&X!==Z)fG(G,X,{get:()=>Y[X],enumerable:!(Q=TZ(Y,X))||Q.enumerable})}return G},VZ=(G)=>UZ(fG({},"__esModule",{value:!0}),G),R1={};LZ(R1,{composePaginateRest:()=>HZ,isPaginatingEndpoint:()=>PZ,paginateRest:()=>j1,paginatingEndpoints:()=>_1});x1.exports=VZ(R1);var wZ="9.0.0",HZ=Object.assign(C1,{iterator:cG}),_1=["GET /advisories","GET /app/hook/deliveries","GET /app/installation-requests","GET /app/installations","GET /assignments/{assignment_id}/accepted_assignments","GET /classrooms","GET /classrooms/{classroom_id}/assignments","GET /enterprises/{enterprise}/dependabot/alerts","GET /enterprises/{enterprise}/secret-scanning/alerts","GET /events","GET /gists","GET /gists/public","GET /gists/starred","GET /gists/{gist_id}/comments","GET /gists/{gist_id}/commits","GET /gists/{gist_id}/forks","GET /installation/repositories","GET /issues","GET /licenses","GET /marketplace_listing/plans","GET /marketplace_listing/plans/{plan_id}/accounts","GET /marketplace_listing/stubbed/plans","GET /marketplace_listing/stubbed/plans/{plan_id}/accounts","GET /networks/{owner}/{repo}/events","GET /notifications","GET /organizations","GET /orgs/{org}/actions/cache/usage-by-repository","GET /orgs/{org}/actions/permissions/repositories","GET /orgs/{org}/actions/runners","GET /orgs/{org}/actions/secrets","GET /orgs/{org}/actions/secrets/{secret_name}/repositories","GET /orgs/{org}/actions/variables","GET /orgs/{org}/actions/variables/{name}/repositories","GET /orgs/{org}/blocks","GET /orgs/{org}/code-scanning/alerts","GET /orgs/{org}/codespaces","GET /orgs/{org}/codespaces/secrets","GET /orgs/{org}/codespaces/secrets/{secret_name}/repositories","GET /orgs/{org}/copilot/billing/seats","GET /orgs/{org}/dependabot/alerts","GET /orgs/{org}/dependabot/secrets","GET /orgs/{org}/dependabot/secrets/{secret_name}/repositories","GET /orgs/{org}/events","GET /orgs/{org}/failed_invitations","GET /orgs/{org}/hooks","GET /orgs/{org}/hooks/{hook_id}/deliveries","GET /orgs/{org}/installations","GET /orgs/{org}/invitations","GET /orgs/{org}/invitations/{invitation_id}/teams","GET /orgs/{org}/issues","GET /orgs/{org}/members","GET /orgs/{org}/members/{username}/codespaces","GET /orgs/{org}/migrations","GET /orgs/{org}/migrations/{migration_id}/repositories","GET /orgs/{org}/outside_collaborators","GET /orgs/{org}/packages","GET /orgs/{org}/packages/{package_type}/{package_name}/versions","GET /orgs/{org}/personal-access-token-requests","GET /orgs/{org}/personal-access-token-requests/{pat_request_id}/repositories","GET /orgs/{org}/personal-access-tokens","GET /orgs/{org}/personal-access-tokens/{pat_id}/repositories","GET /orgs/{org}/projects","GET /orgs/{org}/public_members","GET /orgs/{org}/repos","GET /orgs/{org}/rulesets","GET /orgs/{org}/secret-scanning/alerts","GET /orgs/{org}/security-advisories","GET /orgs/{org}/teams","GET /orgs/{org}/teams/{team_slug}/discussions","GET /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments","GET /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}/reactions","GET /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/reactions","GET /orgs/{org}/teams/{team_slug}/invitations","GET /orgs/{org}/teams/{team_slug}/members","GET /orgs/{org}/teams/{team_slug}/projects","GET /orgs/{org}/teams/{team_slug}/repos","GET /orgs/{org}/teams/{team_slug}/teams","GET /projects/columns/{column_id}/cards","GET /projects/{project_id}/collaborators","GET /projects/{project_id}/columns","GET /repos/{owner}/{repo}/actions/artifacts","GET /repos/{owner}/{repo}/actions/caches","GET /repos/{owner}/{repo}/actions/organization-secrets","GET /repos/{owner}/{repo}/actions/organization-variables","GET /repos/{owner}/{repo}/actions/runners","GET /repos/{owner}/{repo}/actions/runs","GET /repos/{owner}/{repo}/actions/runs/{run_id}/artifacts","GET /repos/{owner}/{repo}/actions/runs/{run_id}/attempts/{attempt_number}/jobs","GET /repos/{owner}/{repo}/actions/runs/{run_id}/jobs","GET /repos/{owner}/{repo}/actions/secrets","GET /repos/{owner}/{repo}/actions/variables","GET /repos/{owner}/{repo}/actions/workflows","GET /repos/{owner}/{repo}/actions/workflows/{workflow_id}/runs","GET /repos/{owner}/{repo}/activity","GET /repos/{owner}/{repo}/assignees","GET /repos/{owner}/{repo}/branches","GET /repos/{owner}/{repo}/check-runs/{check_run_id}/annotations","GET /repos/{owner}/{repo}/check-suites/{check_suite_id}/check-runs","GET /repos/{owner}/{repo}/code-scanning/alerts","GET /repos/{owner}/{repo}/code-scanning/alerts/{alert_number}/instances","GET /repos/{owner}/{repo}/code-scanning/analyses","GET /repos/{owner}/{repo}/codespaces","GET /repos/{owner}/{repo}/codespaces/devcontainers","GET /repos/{owner}/{repo}/codespaces/secrets","GET /repos/{owner}/{repo}/collaborators","GET /repos/{owner}/{repo}/comments","GET /repos/{owner}/{repo}/comments/{comment_id}/reactions","GET /repos/{owner}/{repo}/commits","GET /repos/{owner}/{repo}/commits/{commit_sha}/comments","GET /repos/{owner}/{repo}/commits/{commit_sha}/pulls","GET /repos/{owner}/{repo}/commits/{ref}/check-runs","GET /repos/{owner}/{repo}/commits/{ref}/check-suites","GET /repos/{owner}/{repo}/commits/{ref}/status","GET /repos/{owner}/{repo}/commits/{ref}/statuses","GET /repos/{owner}/{repo}/contributors","GET /repos/{owner}/{repo}/dependabot/alerts","GET /repos/{owner}/{repo}/dependabot/secrets","GET /repos/{owner}/{repo}/deployments","GET /repos/{owner}/{repo}/deployments/{deployment_id}/statuses","GET /repos/{owner}/{repo}/environments","GET /repos/{owner}/{repo}/environments/{environment_name}/deployment-branch-policies","GET /repos/{owner}/{repo}/environments/{environment_name}/deployment_protection_rules/apps","GET /repos/{owner}/{repo}/events","GET /repos/{owner}/{repo}/forks","GET /repos/{owner}/{repo}/hooks","GET /repos/{owner}/{repo}/hooks/{hook_id}/deliveries","GET /repos/{owner}/{repo}/invitations","GET /repos/{owner}/{repo}/issues","GET /repos/{owner}/{repo}/issues/comments","GET /repos/{owner}/{repo}/issues/comments/{comment_id}/reactions","GET /repos/{owner}/{repo}/issues/events","GET /repos/{owner}/{repo}/issues/{issue_number}/comments","GET /repos/{owner}/{repo}/issues/{issue_number}/events","GET /repos/{owner}/{repo}/issues/{issue_number}/labels","GET /repos/{owner}/{repo}/issues/{issue_number}/reactions","GET /repos/{owner}/{repo}/issues/{issue_number}/timeline","GET /repos/{owner}/{repo}/keys","GET /repos/{owner}/{repo}/labels","GET /repos/{owner}/{repo}/milestones","GET /repos/{owner}/{repo}/milestones/{milestone_number}/labels","GET /repos/{owner}/{repo}/notifications","GET /repos/{owner}/{repo}/pages/builds","GET /repos/{owner}/{repo}/projects","GET /repos/{owner}/{repo}/pulls","GET /repos/{owner}/{repo}/pulls/comments","GET /repos/{owner}/{repo}/pulls/comments/{comment_id}/reactions","GET /repos/{owner}/{repo}/pulls/{pull_number}/comments","GET /repos/{owner}/{repo}/pulls/{pull_number}/commits","GET /repos/{owner}/{repo}/pulls/{pull_number}/files","GET /repos/{owner}/{repo}/pulls/{pull_number}/reviews","GET /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}/comments","GET /repos/{owner}/{repo}/releases","GET /repos/{owner}/{repo}/releases/{release_id}/assets","GET /repos/{owner}/{repo}/releases/{release_id}/reactions","GET /repos/{owner}/{repo}/rules/branches/{branch}","GET /repos/{owner}/{repo}/rulesets","GET /repos/{owner}/{repo}/secret-scanning/alerts","GET /repos/{owner}/{repo}/secret-scanning/alerts/{alert_number}/locations","GET /repos/{owner}/{repo}/security-advisories","GET /repos/{owner}/{repo}/stargazers","GET /repos/{owner}/{repo}/subscribers","GET /repos/{owner}/{repo}/tags","GET /repos/{owner}/{repo}/teams","GET /repos/{owner}/{repo}/topics","GET /repositories","GET /repositories/{repository_id}/environments/{environment_name}/secrets","GET /repositories/{repository_id}/environments/{environment_name}/variables","GET /search/code","GET /search/commits","GET /search/issues","GET /search/labels","GET /search/repositories","GET /search/topics","GET /search/users","GET /teams/{team_id}/discussions","GET /teams/{team_id}/discussions/{discussion_number}/comments","GET /teams/{team_id}/discussions/{discussion_number}/comments/{comment_number}/reactions","GET /teams/{team_id}/discussions/{discussion_number}/reactions","GET /teams/{team_id}/invitations","GET /teams/{team_id}/members","GET /teams/{team_id}/projects","GET /teams/{team_id}/repos","GET /teams/{team_id}/teams","GET /user/blocks","GET /user/codespaces","GET /user/codespaces/secrets","GET /user/emails","GET /user/followers","GET /user/following","GET /user/gpg_keys","GET /user/installations","GET /user/installations/{installation_id}/repositories","GET /user/issues","GET /user/keys","GET /user/marketplace_purchases","GET /user/marketplace_purchases/stubbed","GET /user/memberships/orgs","GET /user/migrations","GET /user/migrations/{migration_id}/repositories","GET /user/orgs","GET /user/packages","GET /user/packages/{package_type}/{package_name}/versions","GET /user/public_emails","GET /user/repos","GET /user/repository_invitations","GET /user/social_accounts","GET /user/ssh_signing_keys","GET /user/starred","GET /user/subscriptions","GET /user/teams","GET /users","GET /users/{username}/events","GET /users/{username}/events/orgs/{org}","GET /users/{username}/events/public","GET /users/{username}/followers","GET /users/{username}/following","GET /users/{username}/gists","GET /users/{username}/gpg_keys","GET /users/{username}/keys","GET /users/{username}/orgs","GET /users/{username}/packages","GET /users/{username}/projects","GET /users/{username}/received_events","GET /users/{username}/received_events/public","GET /users/{username}/repos","GET /users/{username}/social_accounts","GET /users/{username}/ssh_signing_keys","GET /users/{username}/starred","GET /users/{username}/subscriptions"];j1.VERSION=wZ});var k1={};ZG(k1,{restEndpointMethods:()=>{{return y1}},legacyRestEndpointMethods:()=>{{return v1}}});var b1,RZ,y1,v1,O1,EZ,NZ,e,DZ;var h1=b(()=>{b1=function(G){const Y={};for(let Z of e.keys())Y[Z]=new Proxy({octokit:G,scope:Z,cache:{}},DZ);return Y},RZ=function(G,Y,Z,Q,X){const J=G.request.defaults(Q);function W(...B){let M=J.endpoint.merge(...B);if(X.mapToData)return M=Object.assign({},M,{data:M[X.mapToData],[X.mapToData]:void 0}),J(M);if(X.renamed){const[I,$]=X.renamed;G.log.warn(`octokit.${Y}.${Z}() has been renamed to octokit.${I}.${$}()`)}if(X.deprecated)G.log.warn(X.deprecated);if(X.renamedParameters){const I=J.endpoint.merge(...B);for(let[$,w]of Object.entries(X.renamedParameters))if($ in I){if(G.log.warn(`"${$}" parameter is deprecated for "octokit.${Y}.${Z}()". Use "${w}" instead`),!(w in I))I[w]=I[$];delete I[$]}return J(I)}return J(...B)}return Object.assign(W,J)},y1=function(G){return{rest:b1(G)}},v1=function(G){const Y=b1(G);return{...Y,rest:Y}},O1="10.0.0",EZ={actions:{addCustomLabelsToSelfHostedRunnerForOrg:["POST /orgs/{org}/actions/runners/{runner_id}/labels"],addCustomLabelsToSelfHostedRunnerForRepo:["POST /repos/{owner}/{repo}/actions/runners/{runner_id}/labels"],addSelectedRepoToOrgSecret:["PUT /orgs/{org}/actions/secrets/{secret_name}/repositories/{repository_id}"],addSelectedRepoToOrgVariable:["PUT /orgs/{org}/actions/variables/{name}/repositories/{repository_id}"],approveWorkflowRun:["POST /repos/{owner}/{repo}/actions/runs/{run_id}/approve"],cancelWorkflowRun:["POST /repos/{owner}/{repo}/actions/runs/{run_id}/cancel"],createEnvironmentVariable:["POST /repositories/{repository_id}/environments/{environment_name}/variables"],createOrUpdateEnvironmentSecret:["PUT /repositories/{repository_id}/environments/{environment_name}/secrets/{secret_name}"],createOrUpdateOrgSecret:["PUT /orgs/{org}/actions/secrets/{secret_name}"],createOrUpdateRepoSecret:["PUT /repos/{owner}/{repo}/actions/secrets/{secret_name}"],createOrgVariable:["POST /orgs/{org}/actions/variables"],createRegistrationTokenForOrg:["POST /orgs/{org}/actions/runners/registration-token"],createRegistrationTokenForRepo:["POST /repos/{owner}/{repo}/actions/runners/registration-token"],createRemoveTokenForOrg:["POST /orgs/{org}/actions/runners/remove-token"],createRemoveTokenForRepo:["POST /repos/{owner}/{repo}/actions/runners/remove-token"],createRepoVariable:["POST /repos/{owner}/{repo}/actions/variables"],createWorkflowDispatch:["POST /repos/{owner}/{repo}/actions/workflows/{workflow_id}/dispatches"],deleteActionsCacheById:["DELETE /repos/{owner}/{repo}/actions/caches/{cache_id}"],deleteActionsCacheByKey:["DELETE /repos/{owner}/{repo}/actions/caches{?key,ref}"],deleteArtifact:["DELETE /repos/{owner}/{repo}/actions/artifacts/{artifact_id}"],deleteEnvironmentSecret:["DELETE /repositories/{repository_id}/environments/{environment_name}/secrets/{secret_name}"],deleteEnvironmentVariable:["DELETE /repositories/{repository_id}/environments/{environment_name}/variables/{name}"],deleteOrgSecret:["DELETE /orgs/{org}/actions/secrets/{secret_name}"],deleteOrgVariable:["DELETE /orgs/{org}/actions/variables/{name}"],deleteRepoSecret:["DELETE /repos/{owner}/{repo}/actions/secrets/{secret_name}"],deleteRepoVariable:["DELETE /repos/{owner}/{repo}/actions/variables/{name}"],deleteSelfHostedRunnerFromOrg:["DELETE /orgs/{org}/actions/runners/{runner_id}"],deleteSelfHostedRunnerFromRepo:["DELETE /repos/{owner}/{repo}/actions/runners/{runner_id}"],deleteWorkflowRun:["DELETE /repos/{owner}/{repo}/actions/runs/{run_id}"],deleteWorkflowRunLogs:["DELETE /repos/{owner}/{repo}/actions/runs/{run_id}/logs"],disableSelectedRepositoryGithubActionsOrganization:["DELETE /orgs/{org}/actions/permissions/repositories/{repository_id}"],disableWorkflow:["PUT /repos/{owner}/{repo}/actions/workflows/{workflow_id}/disable"],downloadArtifact:["GET /repos/{owner}/{repo}/actions/artifacts/{artifact_id}/{archive_format}"],downloadJobLogsForWorkflowRun:["GET /repos/{owner}/{repo}/actions/jobs/{job_id}/logs"],downloadWorkflowRunAttemptLogs:["GET /repos/{owner}/{repo}/actions/runs/{run_id}/attempts/{attempt_number}/logs"],downloadWorkflowRunLogs:["GET /repos/{owner}/{repo}/actions/runs/{run_id}/logs"],enableSelectedRepositoryGithubActionsOrganization:["PUT /orgs/{org}/actions/permissions/repositories/{repository_id}"],enableWorkflow:["PUT /repos/{owner}/{repo}/actions/workflows/{workflow_id}/enable"],generateRunnerJitconfigForOrg:["POST /orgs/{org}/actions/runners/generate-jitconfig"],generateRunnerJitconfigForRepo:["POST /repos/{owner}/{repo}/actions/runners/generate-jitconfig"],getActionsCacheList:["GET /repos/{owner}/{repo}/actions/caches"],getActionsCacheUsage:["GET /repos/{owner}/{repo}/actions/cache/usage"],getActionsCacheUsageByRepoForOrg:["GET /orgs/{org}/actions/cache/usage-by-repository"],getActionsCacheUsageForOrg:["GET /orgs/{org}/actions/cache/usage"],getAllowedActionsOrganization:["GET /orgs/{org}/actions/permissions/selected-actions"],getAllowedActionsRepository:["GET /repos/{owner}/{repo}/actions/permissions/selected-actions"],getArtifact:["GET /repos/{owner}/{repo}/actions/artifacts/{artifact_id}"],getEnvironmentPublicKey:["GET /repositories/{repository_id}/environments/{environment_name}/secrets/public-key"],getEnvironmentSecret:["GET /repositories/{repository_id}/environments/{environment_name}/secrets/{secret_name}"],getEnvironmentVariable:["GET /repositories/{repository_id}/environments/{environment_name}/variables/{name}"],getGithubActionsDefaultWorkflowPermissionsOrganization:["GET /orgs/{org}/actions/permissions/workflow"],getGithubActionsDefaultWorkflowPermissionsRepository:["GET /repos/{owner}/{repo}/actions/permissions/workflow"],getGithubActionsPermissionsOrganization:["GET /orgs/{org}/actions/permissions"],getGithubActionsPermissionsRepository:["GET /repos/{owner}/{repo}/actions/permissions"],getJobForWorkflowRun:["GET /repos/{owner}/{repo}/actions/jobs/{job_id}"],getOrgPublicKey:["GET /orgs/{org}/actions/secrets/public-key"],getOrgSecret:["GET /orgs/{org}/actions/secrets/{secret_name}"],getOrgVariable:["GET /orgs/{org}/actions/variables/{name}"],getPendingDeploymentsForRun:["GET /repos/{owner}/{repo}/actions/runs/{run_id}/pending_deployments"],getRepoPermissions:["GET /repos/{owner}/{repo}/actions/permissions",{},{renamed:["actions","getGithubActionsPermissionsRepository"]}],getRepoPublicKey:["GET /repos/{owner}/{repo}/actions/secrets/public-key"],getRepoSecret:["GET /repos/{owner}/{repo}/actions/secrets/{secret_name}"],getRepoVariable:["GET /repos/{owner}/{repo}/actions/variables/{name}"],getReviewsForRun:["GET /repos/{owner}/{repo}/actions/runs/{run_id}/approvals"],getSelfHostedRunnerForOrg:["GET /orgs/{org}/actions/runners/{runner_id}"],getSelfHostedRunnerForRepo:["GET /repos/{owner}/{repo}/actions/runners/{runner_id}"],getWorkflow:["GET /repos/{owner}/{repo}/actions/workflows/{workflow_id}"],getWorkflowAccessToRepository:["GET /repos/{owner}/{repo}/actions/permissions/access"],getWorkflowRun:["GET /repos/{owner}/{repo}/actions/runs/{run_id}"],getWorkflowRunAttempt:["GET /repos/{owner}/{repo}/actions/runs/{run_id}/attempts/{attempt_number}"],getWorkflowRunUsage:["GET /repos/{owner}/{repo}/actions/runs/{run_id}/timing"],getWorkflowUsage:["GET /repos/{owner}/{repo}/actions/workflows/{workflow_id}/timing"],listArtifactsForRepo:["GET /repos/{owner}/{repo}/actions/artifacts"],listEnvironmentSecrets:["GET /repositories/{repository_id}/environments/{environment_name}/secrets"],listEnvironmentVariables:["GET /repositories/{repository_id}/environments/{environment_name}/variables"],listJobsForWorkflowRun:["GET /repos/{owner}/{repo}/actions/runs/{run_id}/jobs"],listJobsForWorkflowRunAttempt:["GET /repos/{owner}/{repo}/actions/runs/{run_id}/attempts/{attempt_number}/jobs"],listLabelsForSelfHostedRunnerForOrg:["GET /orgs/{org}/actions/runners/{runner_id}/labels"],listLabelsForSelfHostedRunnerForRepo:["GET /repos/{owner}/{repo}/actions/runners/{runner_id}/labels"],listOrgSecrets:["GET /orgs/{org}/actions/secrets"],listOrgVariables:["GET /orgs/{org}/actions/variables"],listRepoOrganizationSecrets:["GET /repos/{owner}/{repo}/actions/organization-secrets"],listRepoOrganizationVariables:["GET /repos/{owner}/{repo}/actions/organization-variables"],listRepoSecrets:["GET /repos/{owner}/{repo}/actions/secrets"],listRepoVariables:["GET /repos/{owner}/{repo}/actions/variables"],listRepoWorkflows:["GET /repos/{owner}/{repo}/actions/workflows"],listRunnerApplicationsForOrg:["GET /orgs/{org}/actions/runners/downloads"],listRunnerApplicationsForRepo:["GET /repos/{owner}/{repo}/actions/runners/downloads"],listSelectedReposForOrgSecret:["GET /orgs/{org}/actions/secrets/{secret_name}/repositories"],listSelectedReposForOrgVariable:["GET /orgs/{org}/actions/variables/{name}/repositories"],listSelectedRepositoriesEnabledGithubActionsOrganization:["GET /orgs/{org}/actions/permissions/repositories"],listSelfHostedRunnersForOrg:["GET /orgs/{org}/actions/runners"],listSelfHostedRunnersForRepo:["GET /repos/{owner}/{repo}/actions/runners"],listWorkflowRunArtifacts:["GET /repos/{owner}/{repo}/actions/runs/{run_id}/artifacts"],listWorkflowRuns:["GET /repos/{owner}/{repo}/actions/workflows/{workflow_id}/runs"],listWorkflowRunsForRepo:["GET /repos/{owner}/{repo}/actions/runs"],reRunJobForWorkflowRun:["POST /repos/{owner}/{repo}/actions/jobs/{job_id}/rerun"],reRunWorkflow:["POST /repos/{owner}/{repo}/actions/runs/{run_id}/rerun"],reRunWorkflowFailedJobs:["POST /repos/{owner}/{repo}/actions/runs/{run_id}/rerun-failed-jobs"],removeAllCustomLabelsFromSelfHostedRunnerForOrg:["DELETE /orgs/{org}/actions/runners/{runner_id}/labels"],removeAllCustomLabelsFromSelfHostedRunnerForRepo:["DELETE /repos/{owner}/{repo}/actions/runners/{runner_id}/labels"],removeCustomLabelFromSelfHostedRunnerForOrg:["DELETE /orgs/{org}/actions/runners/{runner_id}/labels/{name}"],removeCustomLabelFromSelfHostedRunnerForRepo:["DELETE /repos/{owner}/{repo}/actions/runners/{runner_id}/labels/{name}"],removeSelectedRepoFromOrgSecret:["DELETE /orgs/{org}/actions/secrets/{secret_name}/repositories/{repository_id}"],removeSelectedRepoFromOrgVariable:["DELETE /orgs/{org}/actions/variables/{name}/repositories/{repository_id}"],reviewCustomGatesForRun:["POST /repos/{owner}/{repo}/actions/runs/{run_id}/deployment_protection_rule"],reviewPendingDeploymentsForRun:["POST /repos/{owner}/{repo}/actions/runs/{run_id}/pending_deployments"],setAllowedActionsOrganization:["PUT /orgs/{org}/actions/permissions/selected-actions"],setAllowedActionsRepository:["PUT /repos/{owner}/{repo}/actions/permissions/selected-actions"],setCustomLabelsForSelfHostedRunnerForOrg:["PUT /orgs/{org}/actions/runners/{runner_id}/labels"],setCustomLabelsForSelfHostedRunnerForRepo:["PUT /repos/{owner}/{repo}/actions/runners/{runner_id}/labels"],setGithubActionsDefaultWorkflowPermissionsOrganization:["PUT /orgs/{org}/actions/permissions/workflow"],setGithubActionsDefaultWorkflowPermissionsRepository:["PUT /repos/{owner}/{repo}/actions/permissions/workflow"],setGithubActionsPermissionsOrganization:["PUT /orgs/{org}/actions/permissions"],setGithubActionsPermissionsRepository:["PUT /repos/{owner}/{repo}/actions/permissions"],setSelectedReposForOrgSecret:["PUT /orgs/{org}/actions/secrets/{secret_name}/repositories"],setSelectedReposForOrgVariable:["PUT /orgs/{org}/actions/variables/{name}/repositories"],setSelectedRepositoriesEnabledGithubActionsOrganization:["PUT /orgs/{org}/actions/permissions/repositories"],setWorkflowAccessToRepository:["PUT /repos/{owner}/{repo}/actions/permissions/access"],updateEnvironmentVariable:["PATCH /repositories/{repository_id}/environments/{environment_name}/variables/{name}"],updateOrgVariable:["PATCH /orgs/{org}/actions/variables/{name}"],updateRepoVariable:["PATCH /repos/{owner}/{repo}/actions/variables/{name}"]},activity:{checkRepoIsStarredByAuthenticatedUser:["GET /user/starred/{owner}/{repo}"],deleteRepoSubscription:["DELETE /repos/{owner}/{repo}/subscription"],deleteThreadSubscription:["DELETE /notifications/threads/{thread_id}/subscription"],getFeeds:["GET /feeds"],getRepoSubscription:["GET /repos/{owner}/{repo}/subscription"],getThread:["GET /notifications/threads/{thread_id}"],getThreadSubscriptionForAuthenticatedUser:["GET /notifications/threads/{thread_id}/subscription"],listEventsForAuthenticatedUser:["GET /users/{username}/events"],listNotificationsForAuthenticatedUser:["GET /notifications"],listOrgEventsForAuthenticatedUser:["GET /users/{username}/events/orgs/{org}"],listPublicEvents:["GET /events"],listPublicEventsForRepoNetwork:["GET /networks/{owner}/{repo}/events"],listPublicEventsForUser:["GET /users/{username}/events/public"],listPublicOrgEvents:["GET /orgs/{org}/events"],listReceivedEventsForUser:["GET /users/{username}/received_events"],listReceivedPublicEventsForUser:["GET /users/{username}/received_events/public"],listRepoEvents:["GET /repos/{owner}/{repo}/events"],listRepoNotificationsForAuthenticatedUser:["GET /repos/{owner}/{repo}/notifications"],listReposStarredByAuthenticatedUser:["GET /user/starred"],listReposStarredByUser:["GET /users/{username}/starred"],listReposWatchedByUser:["GET /users/{username}/subscriptions"],listStargazersForRepo:["GET /repos/{owner}/{repo}/stargazers"],listWatchedReposForAuthenticatedUser:["GET /user/subscriptions"],listWatchersForRepo:["GET /repos/{owner}/{repo}/subscribers"],markNotificationsAsRead:["PUT /notifications"],markRepoNotificationsAsRead:["PUT /repos/{owner}/{repo}/notifications"],markThreadAsRead:["PATCH /notifications/threads/{thread_id}"],setRepoSubscription:["PUT /repos/{owner}/{repo}/subscription"],setThreadSubscription:["PUT /notifications/threads/{thread_id}/subscription"],starRepoForAuthenticatedUser:["PUT /user/starred/{owner}/{repo}"],unstarRepoForAuthenticatedUser:["DELETE /user/starred/{owner}/{repo}"]},apps:{addRepoToInstallation:["PUT /user/installations/{installation_id}/repositories/{repository_id}",{},{renamed:["apps","addRepoToInstallationForAuthenticatedUser"]}],addRepoToInstallationForAuthenticatedUser:["PUT /user/installations/{installation_id}/repositories/{repository_id}"],checkToken:["POST /applications/{client_id}/token"],createFromManifest:["POST /app-manifests/{code}/conversions"],createInstallationAccessToken:["POST /app/installations/{installation_id}/access_tokens"],deleteAuthorization:["DELETE /applications/{client_id}/grant"],deleteInstallation:["DELETE /app/installations/{installation_id}"],deleteToken:["DELETE /applications/{client_id}/token"],getAuthenticated:["GET /app"],getBySlug:["GET /apps/{app_slug}"],getInstallation:["GET /app/installations/{installation_id}"],getOrgInstallation:["GET /orgs/{org}/installation"],getRepoInstallation:["GET /repos/{owner}/{repo}/installation"],getSubscriptionPlanForAccount:["GET /marketplace_listing/accounts/{account_id}"],getSubscriptionPlanForAccountStubbed:["GET /marketplace_listing/stubbed/accounts/{account_id}"],getUserInstallation:["GET /users/{username}/installation"],getWebhookConfigForApp:["GET /app/hook/config"],getWebhookDelivery:["GET /app/hook/deliveries/{delivery_id}"],listAccountsForPlan:["GET /marketplace_listing/plans/{plan_id}/accounts"],listAccountsForPlanStubbed:["GET /marketplace_listing/stubbed/plans/{plan_id}/accounts"],listInstallationReposForAuthenticatedUser:["GET /user/installations/{installation_id}/repositories"],listInstallationRequestsForAuthenticatedApp:["GET /app/installation-requests"],listInstallations:["GET /app/installations"],listInstallationsForAuthenticatedUser:["GET /user/installations"],listPlans:["GET /marketplace_listing/plans"],listPlansStubbed:["GET /marketplace_listing/stubbed/plans"],listReposAccessibleToInstallation:["GET /installation/repositories"],listSubscriptionsForAuthenticatedUser:["GET /user/marketplace_purchases"],listSubscriptionsForAuthenticatedUserStubbed:["GET /user/marketplace_purchases/stubbed"],listWebhookDeliveries:["GET /app/hook/deliveries"],redeliverWebhookDelivery:["POST /app/hook/deliveries/{delivery_id}/attempts"],removeRepoFromInstallation:["DELETE /user/installations/{installation_id}/repositories/{repository_id}",{},{renamed:["apps","removeRepoFromInstallationForAuthenticatedUser"]}],removeRepoFromInstallationForAuthenticatedUser:["DELETE /user/installations/{installation_id}/repositories/{repository_id}"],resetToken:["PATCH /applications/{client_id}/token"],revokeInstallationAccessToken:["DELETE /installation/token"],scopeToken:["POST /applications/{client_id}/token/scoped"],suspendInstallation:["PUT /app/installations/{installation_id}/suspended"],unsuspendInstallation:["DELETE /app/installations/{installation_id}/suspended"],updateWebhookConfigForApp:["PATCH /app/hook/config"]},billing:{getGithubActionsBillingOrg:["GET /orgs/{org}/settings/billing/actions"],getGithubActionsBillingUser:["GET /users/{username}/settings/billing/actions"],getGithubPackagesBillingOrg:["GET /orgs/{org}/settings/billing/packages"],getGithubPackagesBillingUser:["GET /users/{username}/settings/billing/packages"],getSharedStorageBillingOrg:["GET /orgs/{org}/settings/billing/shared-storage"],getSharedStorageBillingUser:["GET /users/{username}/settings/billing/shared-storage"]},checks:{create:["POST /repos/{owner}/{repo}/check-runs"],createSuite:["POST /repos/{owner}/{repo}/check-suites"],get:["GET /repos/{owner}/{repo}/check-runs/{check_run_id}"],getSuite:["GET /repos/{owner}/{repo}/check-suites/{check_suite_id}"],listAnnotations:["GET /repos/{owner}/{repo}/check-runs/{check_run_id}/annotations"],listForRef:["GET /repos/{owner}/{repo}/commits/{ref}/check-runs"],listForSuite:["GET /repos/{owner}/{repo}/check-suites/{check_suite_id}/check-runs"],listSuitesForRef:["GET /repos/{owner}/{repo}/commits/{ref}/check-suites"],rerequestRun:["POST /repos/{owner}/{repo}/check-runs/{check_run_id}/rerequest"],rerequestSuite:["POST /repos/{owner}/{repo}/check-suites/{check_suite_id}/rerequest"],setSuitesPreferences:["PATCH /repos/{owner}/{repo}/check-suites/preferences"],update:["PATCH /repos/{owner}/{repo}/check-runs/{check_run_id}"]},codeScanning:{deleteAnalysis:["DELETE /repos/{owner}/{repo}/code-scanning/analyses/{analysis_id}{?confirm_delete}"],getAlert:["GET /repos/{owner}/{repo}/code-scanning/alerts/{alert_number}",{},{renamedParameters:{alert_id:"alert_number"}}],getAnalysis:["GET /repos/{owner}/{repo}/code-scanning/analyses/{analysis_id}"],getCodeqlDatabase:["GET /repos/{owner}/{repo}/code-scanning/codeql/databases/{language}"],getDefaultSetup:["GET /repos/{owner}/{repo}/code-scanning/default-setup"],getSarif:["GET /repos/{owner}/{repo}/code-scanning/sarifs/{sarif_id}"],listAlertInstances:["GET /repos/{owner}/{repo}/code-scanning/alerts/{alert_number}/instances"],listAlertsForOrg:["GET /orgs/{org}/code-scanning/alerts"],listAlertsForRepo:["GET /repos/{owner}/{repo}/code-scanning/alerts"],listAlertsInstances:["GET /repos/{owner}/{repo}/code-scanning/alerts/{alert_number}/instances",{},{renamed:["codeScanning","listAlertInstances"]}],listCodeqlDatabases:["GET /repos/{owner}/{repo}/code-scanning/codeql/databases"],listRecentAnalyses:["GET /repos/{owner}/{repo}/code-scanning/analyses"],updateAlert:["PATCH /repos/{owner}/{repo}/code-scanning/alerts/{alert_number}"],updateDefaultSetup:["PATCH /repos/{owner}/{repo}/code-scanning/default-setup"],uploadSarif:["POST /repos/{owner}/{repo}/code-scanning/sarifs"]},codesOfConduct:{getAllCodesOfConduct:["GET /codes_of_conduct"],getConductCode:["GET /codes_of_conduct/{key}"]},codespaces:{addRepositoryForSecretForAuthenticatedUser:["PUT /user/codespaces/secrets/{secret_name}/repositories/{repository_id}"],addSelectedRepoToOrgSecret:["PUT /orgs/{org}/codespaces/secrets/{secret_name}/repositories/{repository_id}"],codespaceMachinesForAuthenticatedUser:["GET /user/codespaces/{codespace_name}/machines"],createForAuthenticatedUser:["POST /user/codespaces"],createOrUpdateOrgSecret:["PUT /orgs/{org}/codespaces/secrets/{secret_name}"],createOrUpdateRepoSecret:["PUT /repos/{owner}/{repo}/codespaces/secrets/{secret_name}"],createOrUpdateSecretForAuthenticatedUser:["PUT /user/codespaces/secrets/{secret_name}"],createWithPrForAuthenticatedUser:["POST /repos/{owner}/{repo}/pulls/{pull_number}/codespaces"],createWithRepoForAuthenticatedUser:["POST /repos/{owner}/{repo}/codespaces"],deleteForAuthenticatedUser:["DELETE /user/codespaces/{codespace_name}"],deleteFromOrganization:["DELETE /orgs/{org}/members/{username}/codespaces/{codespace_name}"],deleteOrgSecret:["DELETE /orgs/{org}/codespaces/secrets/{secret_name}"],deleteRepoSecret:["DELETE /repos/{owner}/{repo}/codespaces/secrets/{secret_name}"],deleteSecretForAuthenticatedUser:["DELETE /user/codespaces/secrets/{secret_name}"],exportForAuthenticatedUser:["POST /user/codespaces/{codespace_name}/exports"],getCodespacesForUserInOrg:["GET /orgs/{org}/members/{username}/codespaces"],getExportDetailsForAuthenticatedUser:["GET /user/codespaces/{codespace_name}/exports/{export_id}"],getForAuthenticatedUser:["GET /user/codespaces/{codespace_name}"],getOrgPublicKey:["GET /orgs/{org}/codespaces/secrets/public-key"],getOrgSecret:["GET /orgs/{org}/codespaces/secrets/{secret_name}"],getPublicKeyForAuthenticatedUser:["GET /user/codespaces/secrets/public-key"],getRepoPublicKey:["GET /repos/{owner}/{repo}/codespaces/secrets/public-key"],getRepoSecret:["GET /repos/{owner}/{repo}/codespaces/secrets/{secret_name}"],getSecretForAuthenticatedUser:["GET /user/codespaces/secrets/{secret_name}"],listDevcontainersInRepositoryForAuthenticatedUser:["GET /repos/{owner}/{repo}/codespaces/devcontainers"],listForAuthenticatedUser:["GET /user/codespaces"],listInOrganization:["GET /orgs/{org}/codespaces",{},{renamedParameters:{org_id:"org"}}],listInRepositoryForAuthenticatedUser:["GET /repos/{owner}/{repo}/codespaces"],listOrgSecrets:["GET /orgs/{org}/codespaces/secrets"],listRepoSecrets:["GET /repos/{owner}/{repo}/codespaces/secrets"],listRepositoriesForSecretForAuthenticatedUser:["GET /user/codespaces/secrets/{secret_name}/repositories"],listSecretsForAuthenticatedUser:["GET /user/codespaces/secrets"],listSelectedReposForOrgSecret:["GET /orgs/{org}/codespaces/secrets/{secret_name}/repositories"],preFlightWithRepoForAuthenticatedUser:["GET /repos/{owner}/{repo}/codespaces/new"],publishForAuthenticatedUser:["POST /user/codespaces/{codespace_name}/publish"],removeRepositoryForSecretForAuthenticatedUser:["DELETE /user/codespaces/secrets/{secret_name}/repositories/{repository_id}"],removeSelectedRepoFromOrgSecret:["DELETE /orgs/{org}/codespaces/secrets/{secret_name}/repositories/{repository_id}"],repoMachinesForAuthenticatedUser:["GET /repos/{owner}/{repo}/codespaces/machines"],setRepositoriesForSecretForAuthenticatedUser:["PUT /user/codespaces/secrets/{secret_name}/repositories"],setSelectedReposForOrgSecret:["PUT /orgs/{org}/codespaces/secrets/{secret_name}/repositories"],startForAuthenticatedUser:["POST /user/codespaces/{codespace_name}/start"],stopForAuthenticatedUser:["POST /user/codespaces/{codespace_name}/stop"],stopInOrganization:["POST /orgs/{org}/members/{username}/codespaces/{codespace_name}/stop"],updateForAuthenticatedUser:["PATCH /user/codespaces/{codespace_name}"]},copilot:{addCopilotForBusinessSeatsForTeams:["POST /orgs/{org}/copilot/billing/selected_teams"],addCopilotForBusinessSeatsForUsers:["POST /orgs/{org}/copilot/billing/selected_users"],cancelCopilotSeatAssignmentForTeams:["DELETE /orgs/{org}/copilot/billing/selected_teams"],cancelCopilotSeatAssignmentForUsers:["DELETE /orgs/{org}/copilot/billing/selected_users"],getCopilotOrganizationDetails:["GET /orgs/{org}/copilot/billing"],getCopilotSeatAssignmentDetailsForUser:["GET /orgs/{org}/members/{username}/copilot"],listCopilotSeats:["GET /orgs/{org}/copilot/billing/seats"]},dependabot:{addSelectedRepoToOrgSecret:["PUT /orgs/{org}/dependabot/secrets/{secret_name}/repositories/{repository_id}"],createOrUpdateOrgSecret:["PUT /orgs/{org}/dependabot/secrets/{secret_name}"],createOrUpdateRepoSecret:["PUT /repos/{owner}/{repo}/dependabot/secrets/{secret_name}"],deleteOrgSecret:["DELETE /orgs/{org}/dependabot/secrets/{secret_name}"],deleteRepoSecret:["DELETE /repos/{owner}/{repo}/dependabot/secrets/{secret_name}"],getAlert:["GET /repos/{owner}/{repo}/dependabot/alerts/{alert_number}"],getOrgPublicKey:["GET /orgs/{org}/dependabot/secrets/public-key"],getOrgSecret:["GET /orgs/{org}/dependabot/secrets/{secret_name}"],getRepoPublicKey:["GET /repos/{owner}/{repo}/dependabot/secrets/public-key"],getRepoSecret:["GET /repos/{owner}/{repo}/dependabot/secrets/{secret_name}"],listAlertsForEnterprise:["GET /enterprises/{enterprise}/dependabot/alerts"],listAlertsForOrg:["GET /orgs/{org}/dependabot/alerts"],listAlertsForRepo:["GET /repos/{owner}/{repo}/dependabot/alerts"],listOrgSecrets:["GET /orgs/{org}/dependabot/secrets"],listRepoSecrets:["GET /repos/{owner}/{repo}/dependabot/secrets"],listSelectedReposForOrgSecret:["GET /orgs/{org}/dependabot/secrets/{secret_name}/repositories"],removeSelectedRepoFromOrgSecret:["DELETE /orgs/{org}/dependabot/secrets/{secret_name}/repositories/{repository_id}"],setSelectedReposForOrgSecret:["PUT /orgs/{org}/dependabot/secrets/{secret_name}/repositories"],updateAlert:["PATCH /repos/{owner}/{repo}/dependabot/alerts/{alert_number}"]},dependencyGraph:{createRepositorySnapshot:["POST /repos/{owner}/{repo}/dependency-graph/snapshots"],diffRange:["GET /repos/{owner}/{repo}/dependency-graph/compare/{basehead}"],exportSbom:["GET /repos/{owner}/{repo}/dependency-graph/sbom"]},emojis:{get:["GET /emojis"]},gists:{checkIsStarred:["GET /gists/{gist_id}/star"],create:["POST /gists"],createComment:["POST /gists/{gist_id}/comments"],delete:["DELETE /gists/{gist_id}"],deleteComment:["DELETE /gists/{gist_id}/comments/{comment_id}"],fork:["POST /gists/{gist_id}/forks"],get:["GET /gists/{gist_id}"],getComment:["GET /gists/{gist_id}/comments/{comment_id}"],getRevision:["GET /gists/{gist_id}/{sha}"],list:["GET /gists"],listComments:["GET /gists/{gist_id}/comments"],listCommits:["GET /gists/{gist_id}/commits"],listForUser:["GET /users/{username}/gists"],listForks:["GET /gists/{gist_id}/forks"],listPublic:["GET /gists/public"],listStarred:["GET /gists/starred"],star:["PUT /gists/{gist_id}/star"],unstar:["DELETE /gists/{gist_id}/star"],update:["PATCH /gists/{gist_id}"],updateComment:["PATCH /gists/{gist_id}/comments/{comment_id}"]},git:{createBlob:["POST /repos/{owner}/{repo}/git/blobs"],createCommit:["POST /repos/{owner}/{repo}/git/commits"],createRef:["POST /repos/{owner}/{repo}/git/refs"],createTag:["POST /repos/{owner}/{repo}/git/tags"],createTree:["POST /repos/{owner}/{repo}/git/trees"],deleteRef:["DELETE /repos/{owner}/{repo}/git/refs/{ref}"],getBlob:["GET /repos/{owner}/{repo}/git/blobs/{file_sha}"],getCommit:["GET /repos/{owner}/{repo}/git/commits/{commit_sha}"],getRef:["GET /repos/{owner}/{repo}/git/ref/{ref}"],getTag:["GET /repos/{owner}/{repo}/git/tags/{tag_sha}"],getTree:["GET /repos/{owner}/{repo}/git/trees/{tree_sha}"],listMatchingRefs:["GET /repos/{owner}/{repo}/git/matching-refs/{ref}"],updateRef:["PATCH /repos/{owner}/{repo}/git/refs/{ref}"]},gitignore:{getAllTemplates:["GET /gitignore/templates"],getTemplate:["GET /gitignore/templates/{name}"]},interactions:{getRestrictionsForAuthenticatedUser:["GET /user/interaction-limits"],getRestrictionsForOrg:["GET /orgs/{org}/interaction-limits"],getRestrictionsForRepo:["GET /repos/{owner}/{repo}/interaction-limits"],getRestrictionsForYourPublicRepos:["GET /user/interaction-limits",{},{renamed:["interactions","getRestrictionsForAuthenticatedUser"]}],removeRestrictionsForAuthenticatedUser:["DELETE /user/interaction-limits"],removeRestrictionsForOrg:["DELETE /orgs/{org}/interaction-limits"],removeRestrictionsForRepo:["DELETE /repos/{owner}/{repo}/interaction-limits"],removeRestrictionsForYourPublicRepos:["DELETE /user/interaction-limits",{},{renamed:["interactions","removeRestrictionsForAuthenticatedUser"]}],setRestrictionsForAuthenticatedUser:["PUT /user/interaction-limits"],setRestrictionsForOrg:["PUT /orgs/{org}/interaction-limits"],setRestrictionsForRepo:["PUT /repos/{owner}/{repo}/interaction-limits"],setRestrictionsForYourPublicRepos:["PUT /user/interaction-limits",{},{renamed:["interactions","setRestrictionsForAuthenticatedUser"]}]},issues:{addAssignees:["POST /repos/{owner}/{repo}/issues/{issue_number}/assignees"],addLabels:["POST /repos/{owner}/{repo}/issues/{issue_number}/labels"],checkUserCanBeAssigned:["GET /repos/{owner}/{repo}/assignees/{assignee}"],checkUserCanBeAssignedToIssue:["GET /repos/{owner}/{repo}/issues/{issue_number}/assignees/{assignee}"],create:["POST /repos/{owner}/{repo}/issues"],createComment:["POST /repos/{owner}/{repo}/issues/{issue_number}/comments"],createLabel:["POST /repos/{owner}/{repo}/labels"],createMilestone:["POST /repos/{owner}/{repo}/milestones"],deleteComment:["DELETE /repos/{owner}/{repo}/issues/comments/{comment_id}"],deleteLabel:["DELETE /repos/{owner}/{repo}/labels/{name}"],deleteMilestone:["DELETE /repos/{owner}/{repo}/milestones/{milestone_number}"],get:["GET /repos/{owner}/{repo}/issues/{issue_number}"],getComment:["GET /repos/{owner}/{repo}/issues/comments/{comment_id}"],getEvent:["GET /repos/{owner}/{repo}/issues/events/{event_id}"],getLabel:["GET /repos/{owner}/{repo}/labels/{name}"],getMilestone:["GET /repos/{owner}/{repo}/milestones/{milestone_number}"],list:["GET /issues"],listAssignees:["GET /repos/{owner}/{repo}/assignees"],listComments:["GET /repos/{owner}/{repo}/issues/{issue_number}/comments"],listCommentsForRepo:["GET /repos/{owner}/{repo}/issues/comments"],listEvents:["GET /repos/{owner}/{repo}/issues/{issue_number}/events"],listEventsForRepo:["GET /repos/{owner}/{repo}/issues/events"],listEventsForTimeline:["GET /repos/{owner}/{repo}/issues/{issue_number}/timeline"],listForAuthenticatedUser:["GET /user/issues"],listForOrg:["GET /orgs/{org}/issues"],listForRepo:["GET /repos/{owner}/{repo}/issues"],listLabelsForMilestone:["GET /repos/{owner}/{repo}/milestones/{milestone_number}/labels"],listLabelsForRepo:["GET /repos/{owner}/{repo}/labels"],listLabelsOnIssue:["GET /repos/{owner}/{repo}/issues/{issue_number}/labels"],listMilestones:["GET /repos/{owner}/{repo}/milestones"],lock:["PUT /repos/{owner}/{repo}/issues/{issue_number}/lock"],removeAllLabels:["DELETE /repos/{owner}/{repo}/issues/{issue_number}/labels"],removeAssignees:["DELETE /repos/{owner}/{repo}/issues/{issue_number}/assignees"],removeLabel:["DELETE /repos/{owner}/{repo}/issues/{issue_number}/labels/{name}"],setLabels:["PUT /repos/{owner}/{repo}/issues/{issue_number}/labels"],unlock:["DELETE /repos/{owner}/{repo}/issues/{issue_number}/lock"],update:["PATCH /repos/{owner}/{repo}/issues/{issue_number}"],updateComment:["PATCH /repos/{owner}/{repo}/issues/comments/{comment_id}"],updateLabel:["PATCH /repos/{owner}/{repo}/labels/{name}"],updateMilestone:["PATCH /repos/{owner}/{repo}/milestones/{milestone_number}"]},licenses:{get:["GET /licenses/{license}"],getAllCommonlyUsed:["GET /licenses"],getForRepo:["GET /repos/{owner}/{repo}/license"]},markdown:{render:["POST /markdown"],renderRaw:["POST /markdown/raw",{headers:{"content-type":"text/plain; charset=utf-8"}}]},meta:{get:["GET /meta"],getAllVersions:["GET /versions"],getOctocat:["GET /octocat"],getZen:["GET /zen"],root:["GET /"]},migrations:{cancelImport:["DELETE /repos/{owner}/{repo}/import"],deleteArchiveForAuthenticatedUser:["DELETE /user/migrations/{migration_id}/archive"],deleteArchiveForOrg:["DELETE /orgs/{org}/migrations/{migration_id}/archive"],downloadArchiveForOrg:["GET /orgs/{org}/migrations/{migration_id}/archive"],getArchiveForAuthenticatedUser:["GET /user/migrations/{migration_id}/archive"],getCommitAuthors:["GET /repos/{owner}/{repo}/import/authors"],getImportStatus:["GET /repos/{owner}/{repo}/import"],getLargeFiles:["GET /repos/{owner}/{repo}/import/large_files"],getStatusForAuthenticatedUser:["GET /user/migrations/{migration_id}"],getStatusForOrg:["GET /orgs/{org}/migrations/{migration_id}"],listForAuthenticatedUser:["GET /user/migrations"],listForOrg:["GET /orgs/{org}/migrations"],listReposForAuthenticatedUser:["GET /user/migrations/{migration_id}/repositories"],listReposForOrg:["GET /orgs/{org}/migrations/{migration_id}/repositories"],listReposForUser:["GET /user/migrations/{migration_id}/repositories",{},{renamed:["migrations","listReposForAuthenticatedUser"]}],mapCommitAuthor:["PATCH /repos/{owner}/{repo}/import/authors/{author_id}"],setLfsPreference:["PATCH /repos/{owner}/{repo}/import/lfs"],startForAuthenticatedUser:["POST /user/migrations"],startForOrg:["POST /orgs/{org}/migrations"],startImport:["PUT /repos/{owner}/{repo}/import"],unlockRepoForAuthenticatedUser:["DELETE /user/migrations/{migration_id}/repos/{repo_name}/lock"],unlockRepoForOrg:["DELETE /orgs/{org}/migrations/{migration_id}/repos/{repo_name}/lock"],updateImport:["PATCH /repos/{owner}/{repo}/import"]},orgs:{addSecurityManagerTeam:["PUT /orgs/{org}/security-managers/teams/{team_slug}"],blockUser:["PUT /orgs/{org}/blocks/{username}"],cancelInvitation:["DELETE /orgs/{org}/invitations/{invitation_id}"],checkBlockedUser:["GET /orgs/{org}/blocks/{username}"],checkMembershipForUser:["GET /orgs/{org}/members/{username}"],checkPublicMembershipForUser:["GET /orgs/{org}/public_members/{username}"],convertMemberToOutsideCollaborator:["PUT /orgs/{org}/outside_collaborators/{username}"],createInvitation:["POST /orgs/{org}/invitations"],createWebhook:["POST /orgs/{org}/hooks"],delete:["DELETE /orgs/{org}"],deleteWebhook:["DELETE /orgs/{org}/hooks/{hook_id}"],enableOrDisableSecurityProductOnAllOrgRepos:["POST /orgs/{org}/{security_product}/{enablement}"],get:["GET /orgs/{org}"],getMembershipForAuthenticatedUser:["GET /user/memberships/orgs/{org}"],getMembershipForUser:["GET /orgs/{org}/memberships/{username}"],getWebhook:["GET /orgs/{org}/hooks/{hook_id}"],getWebhookConfigForOrg:["GET /orgs/{org}/hooks/{hook_id}/config"],getWebhookDelivery:["GET /orgs/{org}/hooks/{hook_id}/deliveries/{delivery_id}"],list:["GET /organizations"],listAppInstallations:["GET /orgs/{org}/installations"],listBlockedUsers:["GET /orgs/{org}/blocks"],listFailedInvitations:["GET /orgs/{org}/failed_invitations"],listForAuthenticatedUser:["GET /user/orgs"],listForUser:["GET /users/{username}/orgs"],listInvitationTeams:["GET /orgs/{org}/invitations/{invitation_id}/teams"],listMembers:["GET /orgs/{org}/members"],listMembershipsForAuthenticatedUser:["GET /user/memberships/orgs"],listOutsideCollaborators:["GET /orgs/{org}/outside_collaborators"],listPatGrantRepositories:["GET /orgs/{org}/personal-access-tokens/{pat_id}/repositories"],listPatGrantRequestRepositories:["GET /orgs/{org}/personal-access-token-requests/{pat_request_id}/repositories"],listPatGrantRequests:["GET /orgs/{org}/personal-access-token-requests"],listPatGrants:["GET /orgs/{org}/personal-access-tokens"],listPendingInvitations:["GET /orgs/{org}/invitations"],listPublicMembers:["GET /orgs/{org}/public_members"],listSecurityManagerTeams:["GET /orgs/{org}/security-managers"],listWebhookDeliveries:["GET /orgs/{org}/hooks/{hook_id}/deliveries"],listWebhooks:["GET /orgs/{org}/hooks"],pingWebhook:["POST /orgs/{org}/hooks/{hook_id}/pings"],redeliverWebhookDelivery:["POST /orgs/{org}/hooks/{hook_id}/deliveries/{delivery_id}/attempts"],removeMember:["DELETE /orgs/{org}/members/{username}"],removeMembershipForUser:["DELETE /orgs/{org}/memberships/{username}"],removeOutsideCollaborator:["DELETE /orgs/{org}/outside_collaborators/{username}"],removePublicMembershipForAuthenticatedUser:["DELETE /orgs/{org}/public_members/{username}"],removeSecurityManagerTeam:["DELETE /orgs/{org}/security-managers/teams/{team_slug}"],reviewPatGrantRequest:["POST /orgs/{org}/personal-access-token-requests/{pat_request_id}"],reviewPatGrantRequestsInBulk:["POST /orgs/{org}/personal-access-token-requests"],setMembershipForUser:["PUT /orgs/{org}/memberships/{username}"],setPublicMembershipForAuthenticatedUser:["PUT /orgs/{org}/public_members/{username}"],unblockUser:["DELETE /orgs/{org}/blocks/{username}"],update:["PATCH /orgs/{org}"],updateMembershipForAuthenticatedUser:["PATCH /user/memberships/orgs/{org}"],updatePatAccess:["POST /orgs/{org}/personal-access-tokens/{pat_id}"],updatePatAccesses:["POST /orgs/{org}/personal-access-tokens"],updateWebhook:["PATCH /orgs/{org}/hooks/{hook_id}"],updateWebhookConfigForOrg:["PATCH /orgs/{org}/hooks/{hook_id}/config"]},packages:{deletePackageForAuthenticatedUser:["DELETE /user/packages/{package_type}/{package_name}"],deletePackageForOrg:["DELETE /orgs/{org}/packages/{package_type}/{package_name}"],deletePackageForUser:["DELETE /users/{username}/packages/{package_type}/{package_name}"],deletePackageVersionForAuthenticatedUser:["DELETE /user/packages/{package_type}/{package_name}/versions/{package_version_id}"],deletePackageVersionForOrg:["DELETE /orgs/{org}/packages/{package_type}/{package_name}/versions/{package_version_id}"],deletePackageVersionForUser:["DELETE /users/{username}/packages/{package_type}/{package_name}/versions/{package_version_id}"],getAllPackageVersionsForAPackageOwnedByAnOrg:["GET /orgs/{org}/packages/{package_type}/{package_name}/versions",{},{renamed:["packages","getAllPackageVersionsForPackageOwnedByOrg"]}],getAllPackageVersionsForAPackageOwnedByTheAuthenticatedUser:["GET /user/packages/{package_type}/{package_name}/versions",{},{renamed:["packages","getAllPackageVersionsForPackageOwnedByAuthenticatedUser"]}],getAllPackageVersionsForPackageOwnedByAuthenticatedUser:["GET /user/packages/{package_type}/{package_name}/versions"],getAllPackageVersionsForPackageOwnedByOrg:["GET /orgs/{org}/packages/{package_type}/{package_name}/versions"],getAllPackageVersionsForPackageOwnedByUser:["GET /users/{username}/packages/{package_type}/{package_name}/versions"],getPackageForAuthenticatedUser:["GET /user/packages/{package_type}/{package_name}"],getPackageForOrganization:["GET /orgs/{org}/packages/{package_type}/{package_name}"],getPackageForUser:["GET /users/{username}/packages/{package_type}/{package_name}"],getPackageVersionForAuthenticatedUser:["GET /user/packages/{package_type}/{package_name}/versions/{package_version_id}"],getPackageVersionForOrganization:["GET /orgs/{org}/packages/{package_type}/{package_name}/versions/{package_version_id}"],getPackageVersionForUser:["GET /users/{username}/packages/{package_type}/{package_name}/versions/{package_version_id}"],listDockerMigrationConflictingPackagesForAuthenticatedUser:["GET /user/docker/conflicts"],listDockerMigrationConflictingPackagesForOrganization:["GET /orgs/{org}/docker/conflicts"],listDockerMigrationConflictingPackagesForUser:["GET /users/{username}/docker/conflicts"],listPackagesForAuthenticatedUser:["GET /user/packages"],listPackagesForOrganization:["GET /orgs/{org}/packages"],listPackagesForUser:["GET /users/{username}/packages"],restorePackageForAuthenticatedUser:["POST /user/packages/{package_type}/{package_name}/restore{?token}"],restorePackageForOrg:["POST /orgs/{org}/packages/{package_type}/{package_name}/restore{?token}"],restorePackageForUser:["POST /users/{username}/packages/{package_type}/{package_name}/restore{?token}"],restorePackageVersionForAuthenticatedUser:["POST /user/packages/{package_type}/{package_name}/versions/{package_version_id}/restore"],restorePackageVersionForOrg:["POST /orgs/{org}/packages/{package_type}/{package_name}/versions/{package_version_id}/restore"],restorePackageVersionForUser:["POST /users/{username}/packages/{package_type}/{package_name}/versions/{package_version_id}/restore"]},projects:{addCollaborator:["PUT /projects/{project_id}/collaborators/{username}"],createCard:["POST /projects/columns/{column_id}/cards"],createColumn:["POST /projects/{project_id}/columns"],createForAuthenticatedUser:["POST /user/projects"],createForOrg:["POST /orgs/{org}/projects"],createForRepo:["POST /repos/{owner}/{repo}/projects"],delete:["DELETE /projects/{project_id}"],deleteCard:["DELETE /projects/columns/cards/{card_id}"],deleteColumn:["DELETE /projects/columns/{column_id}"],get:["GET /projects/{project_id}"],getCard:["GET /projects/columns/cards/{card_id}"],getColumn:["GET /projects/columns/{column_id}"],getPermissionForUser:["GET /projects/{project_id}/collaborators/{username}/permission"],listCards:["GET /projects/columns/{column_id}/cards"],listCollaborators:["GET /projects/{project_id}/collaborators"],listColumns:["GET /projects/{project_id}/columns"],listForOrg:["GET /orgs/{org}/projects"],listForRepo:["GET /repos/{owner}/{repo}/projects"],listForUser:["GET /users/{username}/projects"],moveCard:["POST /projects/columns/cards/{card_id}/moves"],moveColumn:["POST /projects/columns/{column_id}/moves"],removeCollaborator:["DELETE /projects/{project_id}/collaborators/{username}"],update:["PATCH /projects/{project_id}"],updateCard:["PATCH /projects/columns/cards/{card_id}"],updateColumn:["PATCH /projects/columns/{column_id}"]},pulls:{checkIfMerged:["GET /repos/{owner}/{repo}/pulls/{pull_number}/merge"],create:["POST /repos/{owner}/{repo}/pulls"],createReplyForReviewComment:["POST /repos/{owner}/{repo}/pulls/{pull_number}/comments/{comment_id}/replies"],createReview:["POST /repos/{owner}/{repo}/pulls/{pull_number}/reviews"],createReviewComment:["POST /repos/{owner}/{repo}/pulls/{pull_number}/comments"],deletePendingReview:["DELETE /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}"],deleteReviewComment:["DELETE /repos/{owner}/{repo}/pulls/comments/{comment_id}"],dismissReview:["PUT /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}/dismissals"],get:["GET /repos/{owner}/{repo}/pulls/{pull_number}"],getReview:["GET /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}"],getReviewComment:["GET /repos/{owner}/{repo}/pulls/comments/{comment_id}"],list:["GET /repos/{owner}/{repo}/pulls"],listCommentsForReview:["GET /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}/comments"],listCommits:["GET /repos/{owner}/{repo}/pulls/{pull_number}/commits"],listFiles:["GET /repos/{owner}/{repo}/pulls/{pull_number}/files"],listRequestedReviewers:["GET /repos/{owner}/{repo}/pulls/{pull_number}/requested_reviewers"],listReviewComments:["GET /repos/{owner}/{repo}/pulls/{pull_number}/comments"],listReviewCommentsForRepo:["GET /repos/{owner}/{repo}/pulls/comments"],listReviews:["GET /repos/{owner}/{repo}/pulls/{pull_number}/reviews"],merge:["PUT /repos/{owner}/{repo}/pulls/{pull_number}/merge"],removeRequestedReviewers:["DELETE /repos/{owner}/{repo}/pulls/{pull_number}/requested_reviewers"],requestReviewers:["POST /repos/{owner}/{repo}/pulls/{pull_number}/requested_reviewers"],submitReview:["POST /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}/events"],update:["PATCH /repos/{owner}/{repo}/pulls/{pull_number}"],updateBranch:["PUT /repos/{owner}/{repo}/pulls/{pull_number}/update-branch"],updateReview:["PUT /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}"],updateReviewComment:["PATCH /repos/{owner}/{repo}/pulls/comments/{comment_id}"]},rateLimit:{get:["GET /rate_limit"]},reactions:{createForCommitComment:["POST /repos/{owner}/{repo}/comments/{comment_id}/reactions"],createForIssue:["POST /repos/{owner}/{repo}/issues/{issue_number}/reactions"],createForIssueComment:["POST /repos/{owner}/{repo}/issues/comments/{comment_id}/reactions"],createForPullRequestReviewComment:["POST /repos/{owner}/{repo}/pulls/comments/{comment_id}/reactions"],createForRelease:["POST /repos/{owner}/{repo}/releases/{release_id}/reactions"],createForTeamDiscussionCommentInOrg:["POST /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}/reactions"],createForTeamDiscussionInOrg:["POST /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/reactions"],deleteForCommitComment:["DELETE /repos/{owner}/{repo}/comments/{comment_id}/reactions/{reaction_id}"],deleteForIssue:["DELETE /repos/{owner}/{repo}/issues/{issue_number}/reactions/{reaction_id}"],deleteForIssueComment:["DELETE /repos/{owner}/{repo}/issues/comments/{comment_id}/reactions/{reaction_id}"],deleteForPullRequestComment:["DELETE /repos/{owner}/{repo}/pulls/comments/{comment_id}/reactions/{reaction_id}"],deleteForRelease:["DELETE /repos/{owner}/{repo}/releases/{release_id}/reactions/{reaction_id}"],deleteForTeamDiscussion:["DELETE /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/reactions/{reaction_id}"],deleteForTeamDiscussionComment:["DELETE /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}/reactions/{reaction_id}"],listForCommitComment:["GET /repos/{owner}/{repo}/comments/{comment_id}/reactions"],listForIssue:["GET /repos/{owner}/{repo}/issues/{issue_number}/reactions"],listForIssueComment:["GET /repos/{owner}/{repo}/issues/comments/{comment_id}/reactions"],listForPullRequestReviewComment:["GET /repos/{owner}/{repo}/pulls/comments/{comment_id}/reactions"],listForRelease:["GET /repos/{owner}/{repo}/releases/{release_id}/reactions"],listForTeamDiscussionCommentInOrg:["GET /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}/reactions"],listForTeamDiscussionInOrg:["GET /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/reactions"]},repos:{acceptInvitation:["PATCH /user/repository_invitations/{invitation_id}",{},{renamed:["repos","acceptInvitationForAuthenticatedUser"]}],acceptInvitationForAuthenticatedUser:["PATCH /user/repository_invitations/{invitation_id}"],addAppAccessRestrictions:["POST /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/apps",{},{mapToData:"apps"}],addCollaborator:["PUT /repos/{owner}/{repo}/collaborators/{username}"],addStatusCheckContexts:["POST /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks/contexts",{},{mapToData:"contexts"}],addTeamAccessRestrictions:["POST /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/teams",{},{mapToData:"teams"}],addUserAccessRestrictions:["POST /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/users",{},{mapToData:"users"}],checkAutomatedSecurityFixes:["GET /repos/{owner}/{repo}/automated-security-fixes"],checkCollaborator:["GET /repos/{owner}/{repo}/collaborators/{username}"],checkVulnerabilityAlerts:["GET /repos/{owner}/{repo}/vulnerability-alerts"],codeownersErrors:["GET /repos/{owner}/{repo}/codeowners/errors"],compareCommits:["GET /repos/{owner}/{repo}/compare/{base}...{head}"],compareCommitsWithBasehead:["GET /repos/{owner}/{repo}/compare/{basehead}"],createAutolink:["POST /repos/{owner}/{repo}/autolinks"],createCommitComment:["POST /repos/{owner}/{repo}/commits/{commit_sha}/comments"],createCommitSignatureProtection:["POST /repos/{owner}/{repo}/branches/{branch}/protection/required_signatures"],createCommitStatus:["POST /repos/{owner}/{repo}/statuses/{sha}"],createDeployKey:["POST /repos/{owner}/{repo}/keys"],createDeployment:["POST /repos/{owner}/{repo}/deployments"],createDeploymentBranchPolicy:["POST /repos/{owner}/{repo}/environments/{environment_name}/deployment-branch-policies"],createDeploymentProtectionRule:["POST /repos/{owner}/{repo}/environments/{environment_name}/deployment_protection_rules"],createDeploymentStatus:["POST /repos/{owner}/{repo}/deployments/{deployment_id}/statuses"],createDispatchEvent:["POST /repos/{owner}/{repo}/dispatches"],createForAuthenticatedUser:["POST /user/repos"],createFork:["POST /repos/{owner}/{repo}/forks"],createInOrg:["POST /orgs/{org}/repos"],createOrUpdateEnvironment:["PUT /repos/{owner}/{repo}/environments/{environment_name}"],createOrUpdateFileContents:["PUT /repos/{owner}/{repo}/contents/{path}"],createOrgRuleset:["POST /orgs/{org}/rulesets"],createPagesDeployment:["POST /repos/{owner}/{repo}/pages/deployment"],createPagesSite:["POST /repos/{owner}/{repo}/pages"],createRelease:["POST /repos/{owner}/{repo}/releases"],createRepoRuleset:["POST /repos/{owner}/{repo}/rulesets"],createTagProtection:["POST /repos/{owner}/{repo}/tags/protection"],createUsingTemplate:["POST /repos/{template_owner}/{template_repo}/generate"],createWebhook:["POST /repos/{owner}/{repo}/hooks"],declineInvitation:["DELETE /user/repository_invitations/{invitation_id}",{},{renamed:["repos","declineInvitationForAuthenticatedUser"]}],declineInvitationForAuthenticatedUser:["DELETE /user/repository_invitations/{invitation_id}"],delete:["DELETE /repos/{owner}/{repo}"],deleteAccessRestrictions:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/restrictions"],deleteAdminBranchProtection:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/enforce_admins"],deleteAnEnvironment:["DELETE /repos/{owner}/{repo}/environments/{environment_name}"],deleteAutolink:["DELETE /repos/{owner}/{repo}/autolinks/{autolink_id}"],deleteBranchProtection:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection"],deleteCommitComment:["DELETE /repos/{owner}/{repo}/comments/{comment_id}"],deleteCommitSignatureProtection:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/required_signatures"],deleteDeployKey:["DELETE /repos/{owner}/{repo}/keys/{key_id}"],deleteDeployment:["DELETE /repos/{owner}/{repo}/deployments/{deployment_id}"],deleteDeploymentBranchPolicy:["DELETE /repos/{owner}/{repo}/environments/{environment_name}/deployment-branch-policies/{branch_policy_id}"],deleteFile:["DELETE /repos/{owner}/{repo}/contents/{path}"],deleteInvitation:["DELETE /repos/{owner}/{repo}/invitations/{invitation_id}"],deleteOrgRuleset:["DELETE /orgs/{org}/rulesets/{ruleset_id}"],deletePagesSite:["DELETE /repos/{owner}/{repo}/pages"],deletePullRequestReviewProtection:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/required_pull_request_reviews"],deleteRelease:["DELETE /repos/{owner}/{repo}/releases/{release_id}"],deleteReleaseAsset:["DELETE /repos/{owner}/{repo}/releases/assets/{asset_id}"],deleteRepoRuleset:["DELETE /repos/{owner}/{repo}/rulesets/{ruleset_id}"],deleteTagProtection:["DELETE /repos/{owner}/{repo}/tags/protection/{tag_protection_id}"],deleteWebhook:["DELETE /repos/{owner}/{repo}/hooks/{hook_id}"],disableAutomatedSecurityFixes:["DELETE /repos/{owner}/{repo}/automated-security-fixes"],disableDeploymentProtectionRule:["DELETE /repos/{owner}/{repo}/environments/{environment_name}/deployment_protection_rules/{protection_rule_id}"],disablePrivateVulnerabilityReporting:["DELETE /repos/{owner}/{repo}/private-vulnerability-reporting"],disableVulnerabilityAlerts:["DELETE /repos/{owner}/{repo}/vulnerability-alerts"],downloadArchive:["GET /repos/{owner}/{repo}/zipball/{ref}",{},{renamed:["repos","downloadZipballArchive"]}],downloadTarballArchive:["GET /repos/{owner}/{repo}/tarball/{ref}"],downloadZipballArchive:["GET /repos/{owner}/{repo}/zipball/{ref}"],enableAutomatedSecurityFixes:["PUT /repos/{owner}/{repo}/automated-security-fixes"],enablePrivateVulnerabilityReporting:["PUT /repos/{owner}/{repo}/private-vulnerability-reporting"],enableVulnerabilityAlerts:["PUT /repos/{owner}/{repo}/vulnerability-alerts"],generateReleaseNotes:["POST /repos/{owner}/{repo}/releases/generate-notes"],get:["GET /repos/{owner}/{repo}"],getAccessRestrictions:["GET /repos/{owner}/{repo}/branches/{branch}/protection/restrictions"],getAdminBranchProtection:["GET /repos/{owner}/{repo}/branches/{branch}/protection/enforce_admins"],getAllDeploymentProtectionRules:["GET /repos/{owner}/{repo}/environments/{environment_name}/deployment_protection_rules"],getAllEnvironments:["GET /repos/{owner}/{repo}/environments"],getAllStatusCheckContexts:["GET /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks/contexts"],getAllTopics:["GET /repos/{owner}/{repo}/topics"],getAppsWithAccessToProtectedBranch:["GET /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/apps"],getAutolink:["GET /repos/{owner}/{repo}/autolinks/{autolink_id}"],getBranch:["GET /repos/{owner}/{repo}/branches/{branch}"],getBranchProtection:["GET /repos/{owner}/{repo}/branches/{branch}/protection"],getBranchRules:["GET /repos/{owner}/{repo}/rules/branches/{branch}"],getClones:["GET /repos/{owner}/{repo}/traffic/clones"],getCodeFrequencyStats:["GET /repos/{owner}/{repo}/stats/code_frequency"],getCollaboratorPermissionLevel:["GET /repos/{owner}/{repo}/collaborators/{username}/permission"],getCombinedStatusForRef:["GET /repos/{owner}/{repo}/commits/{ref}/status"],getCommit:["GET /repos/{owner}/{repo}/commits/{ref}"],getCommitActivityStats:["GET /repos/{owner}/{repo}/stats/commit_activity"],getCommitComment:["GET /repos/{owner}/{repo}/comments/{comment_id}"],getCommitSignatureProtection:["GET /repos/{owner}/{repo}/branches/{branch}/protection/required_signatures"],getCommunityProfileMetrics:["GET /repos/{owner}/{repo}/community/profile"],getContent:["GET /repos/{owner}/{repo}/contents/{path}"],getContributorsStats:["GET /repos/{owner}/{repo}/stats/contributors"],getCustomDeploymentProtectionRule:["GET /repos/{owner}/{repo}/environments/{environment_name}/deployment_protection_rules/{protection_rule_id}"],getDeployKey:["GET /repos/{owner}/{repo}/keys/{key_id}"],getDeployment:["GET /repos/{owner}/{repo}/deployments/{deployment_id}"],getDeploymentBranchPolicy:["GET /repos/{owner}/{repo}/environments/{environment_name}/deployment-branch-policies/{branch_policy_id}"],getDeploymentStatus:["GET /repos/{owner}/{repo}/deployments/{deployment_id}/statuses/{status_id}"],getEnvironment:["GET /repos/{owner}/{repo}/environments/{environment_name}"],getLatestPagesBuild:["GET /repos/{owner}/{repo}/pages/builds/latest"],getLatestRelease:["GET /repos/{owner}/{repo}/releases/latest"],getOrgRuleset:["GET /orgs/{org}/rulesets/{ruleset_id}"],getOrgRulesets:["GET /orgs/{org}/rulesets"],getPages:["GET /repos/{owner}/{repo}/pages"],getPagesBuild:["GET /repos/{owner}/{repo}/pages/builds/{build_id}"],getPagesHealthCheck:["GET /repos/{owner}/{repo}/pages/health"],getParticipationStats:["GET /repos/{owner}/{repo}/stats/participation"],getPullRequestReviewProtection:["GET /repos/{owner}/{repo}/branches/{branch}/protection/required_pull_request_reviews"],getPunchCardStats:["GET /repos/{owner}/{repo}/stats/punch_card"],getReadme:["GET /repos/{owner}/{repo}/readme"],getReadmeInDirectory:["GET /repos/{owner}/{repo}/readme/{dir}"],getRelease:["GET /repos/{owner}/{repo}/releases/{release_id}"],getReleaseAsset:["GET /repos/{owner}/{repo}/releases/assets/{asset_id}"],getReleaseByTag:["GET /repos/{owner}/{repo}/releases/tags/{tag}"],getRepoRuleset:["GET /repos/{owner}/{repo}/rulesets/{ruleset_id}"],getRepoRulesets:["GET /repos/{owner}/{repo}/rulesets"],getStatusChecksProtection:["GET /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks"],getTeamsWithAccessToProtectedBranch:["GET /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/teams"],getTopPaths:["GET /repos/{owner}/{repo}/traffic/popular/paths"],getTopReferrers:["GET /repos/{owner}/{repo}/traffic/popular/referrers"],getUsersWithAccessToProtectedBranch:["GET /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/users"],getViews:["GET /repos/{owner}/{repo}/traffic/views"],getWebhook:["GET /repos/{owner}/{repo}/hooks/{hook_id}"],getWebhookConfigForRepo:["GET /repos/{owner}/{repo}/hooks/{hook_id}/config"],getWebhookDelivery:["GET /repos/{owner}/{repo}/hooks/{hook_id}/deliveries/{delivery_id}"],listActivities:["GET /repos/{owner}/{repo}/activity"],listAutolinks:["GET /repos/{owner}/{repo}/autolinks"],listBranches:["GET /repos/{owner}/{repo}/branches"],listBranchesForHeadCommit:["GET /repos/{owner}/{repo}/commits/{commit_sha}/branches-where-head"],listCollaborators:["GET /repos/{owner}/{repo}/collaborators"],listCommentsForCommit:["GET /repos/{owner}/{repo}/commits/{commit_sha}/comments"],listCommitCommentsForRepo:["GET /repos/{owner}/{repo}/comments"],listCommitStatusesForRef:["GET /repos/{owner}/{repo}/commits/{ref}/statuses"],listCommits:["GET /repos/{owner}/{repo}/commits"],listContributors:["GET /repos/{owner}/{repo}/contributors"],listCustomDeploymentRuleIntegrations:["GET /repos/{owner}/{repo}/environments/{environment_name}/deployment_protection_rules/apps"],listDeployKeys:["GET /repos/{owner}/{repo}/keys"],listDeploymentBranchPolicies:["GET /repos/{owner}/{repo}/environments/{environment_name}/deployment-branch-policies"],listDeploymentStatuses:["GET /repos/{owner}/{repo}/deployments/{deployment_id}/statuses"],listDeployments:["GET /repos/{owner}/{repo}/deployments"],listForAuthenticatedUser:["GET /user/repos"],listForOrg:["GET /orgs/{org}/repos"],listForUser:["GET /users/{username}/repos"],listForks:["GET /repos/{owner}/{repo}/forks"],listInvitations:["GET /repos/{owner}/{repo}/invitations"],listInvitationsForAuthenticatedUser:["GET /user/repository_invitations"],listLanguages:["GET /repos/{owner}/{repo}/languages"],listPagesBuilds:["GET /repos/{owner}/{repo}/pages/builds"],listPublic:["GET /repositories"],listPullRequestsAssociatedWithCommit:["GET /repos/{owner}/{repo}/commits/{commit_sha}/pulls"],listReleaseAssets:["GET /repos/{owner}/{repo}/releases/{release_id}/assets"],listReleases:["GET /repos/{owner}/{repo}/releases"],listTagProtection:["GET /repos/{owner}/{repo}/tags/protection"],listTags:["GET /repos/{owner}/{repo}/tags"],listTeams:["GET /repos/{owner}/{repo}/teams"],listWebhookDeliveries:["GET /repos/{owner}/{repo}/hooks/{hook_id}/deliveries"],listWebhooks:["GET /repos/{owner}/{repo}/hooks"],merge:["POST /repos/{owner}/{repo}/merges"],mergeUpstream:["POST /repos/{owner}/{repo}/merge-upstream"],pingWebhook:["POST /repos/{owner}/{repo}/hooks/{hook_id}/pings"],redeliverWebhookDelivery:["POST /repos/{owner}/{repo}/hooks/{hook_id}/deliveries/{delivery_id}/attempts"],removeAppAccessRestrictions:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/apps",{},{mapToData:"apps"}],removeCollaborator:["DELETE /repos/{owner}/{repo}/collaborators/{username}"],removeStatusCheckContexts:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks/contexts",{},{mapToData:"contexts"}],removeStatusCheckProtection:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks"],removeTeamAccessRestrictions:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/teams",{},{mapToData:"teams"}],removeUserAccessRestrictions:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/users",{},{mapToData:"users"}],renameBranch:["POST /repos/{owner}/{repo}/branches/{branch}/rename"],replaceAllTopics:["PUT /repos/{owner}/{repo}/topics"],requestPagesBuild:["POST /repos/{owner}/{repo}/pages/builds"],setAdminBranchProtection:["POST /repos/{owner}/{repo}/branches/{branch}/protection/enforce_admins"],setAppAccessRestrictions:["PUT /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/apps",{},{mapToData:"apps"}],setStatusCheckContexts:["PUT /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks/contexts",{},{mapToData:"contexts"}],setTeamAccessRestrictions:["PUT /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/teams",{},{mapToData:"teams"}],setUserAccessRestrictions:["PUT /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/users",{},{mapToData:"users"}],testPushWebhook:["POST /repos/{owner}/{repo}/hooks/{hook_id}/tests"],transfer:["POST /repos/{owner}/{repo}/transfer"],update:["PATCH /repos/{owner}/{repo}"],updateBranchProtection:["PUT /repos/{owner}/{repo}/branches/{branch}/protection"],updateCommitComment:["PATCH /repos/{owner}/{repo}/comments/{comment_id}"],updateDeploymentBranchPolicy:["PUT /repos/{owner}/{repo}/environments/{environment_name}/deployment-branch-policies/{branch_policy_id}"],updateInformationAboutPagesSite:["PUT /repos/{owner}/{repo}/pages"],updateInvitation:["PATCH /repos/{owner}/{repo}/invitations/{invitation_id}"],updateOrgRuleset:["PUT /orgs/{org}/rulesets/{ruleset_id}"],updatePullRequestReviewProtection:["PATCH /repos/{owner}/{repo}/branches/{branch}/protection/required_pull_request_reviews"],updateRelease:["PATCH /repos/{owner}/{repo}/releases/{release_id}"],updateReleaseAsset:["PATCH /repos/{owner}/{repo}/releases/assets/{asset_id}"],updateRepoRuleset:["PUT /repos/{owner}/{repo}/rulesets/{ruleset_id}"],updateStatusCheckPotection:["PATCH /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks",{},{renamed:["repos","updateStatusCheckProtection"]}],updateStatusCheckProtection:["PATCH /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks"],updateWebhook:["PATCH /repos/{owner}/{repo}/hooks/{hook_id}"],updateWebhookConfigForRepo:["PATCH /repos/{owner}/{repo}/hooks/{hook_id}/config"],uploadReleaseAsset:["POST /repos/{owner}/{repo}/releases/{release_id}/assets{?name,label}",{baseUrl:"https://uploads.github.com"}]},search:{code:["GET /search/code"],commits:["GET /search/commits"],issuesAndPullRequests:["GET /search/issues"],labels:["GET /search/labels"],repos:["GET /search/repositories"],topics:["GET /search/topics"],users:["GET /search/users"]},secretScanning:{getAlert:["GET /repos/{owner}/{repo}/secret-scanning/alerts/{alert_number}"],listAlertsForEnterprise:["GET /enterprises/{enterprise}/secret-scanning/alerts"],listAlertsForOrg:["GET /orgs/{org}/secret-scanning/alerts"],listAlertsForRepo:["GET /repos/{owner}/{repo}/secret-scanning/alerts"],listLocationsForAlert:["GET /repos/{owner}/{repo}/secret-scanning/alerts/{alert_number}/locations"],updateAlert:["PATCH /repos/{owner}/{repo}/secret-scanning/alerts/{alert_number}"]},securityAdvisories:{createPrivateVulnerabilityReport:["POST /repos/{owner}/{repo}/security-advisories/reports"],createRepositoryAdvisory:["POST /repos/{owner}/{repo}/security-advisories"],createRepositoryAdvisoryCveRequest:["POST /repos/{owner}/{repo}/security-advisories/{ghsa_id}/cve"],getGlobalAdvisory:["GET /advisories/{ghsa_id}"],getRepositoryAdvisory:["GET /repos/{owner}/{repo}/security-advisories/{ghsa_id}"],listGlobalAdvisories:["GET /advisories"],listOrgRepositoryAdvisories:["GET /orgs/{org}/security-advisories"],listRepositoryAdvisories:["GET /repos/{owner}/{repo}/security-advisories"],updateRepositoryAdvisory:["PATCH /repos/{owner}/{repo}/security-advisories/{ghsa_id}"]},teams:{addOrUpdateMembershipForUserInOrg:["PUT /orgs/{org}/teams/{team_slug}/memberships/{username}"],addOrUpdateProjectPermissionsInOrg:["PUT /orgs/{org}/teams/{team_slug}/projects/{project_id}"],addOrUpdateRepoPermissionsInOrg:["PUT /orgs/{org}/teams/{team_slug}/repos/{owner}/{repo}"],checkPermissionsForProjectInOrg:["GET /orgs/{org}/teams/{team_slug}/projects/{project_id}"],checkPermissionsForRepoInOrg:["GET /orgs/{org}/teams/{team_slug}/repos/{owner}/{repo}"],create:["POST /orgs/{org}/teams"],createDiscussionCommentInOrg:["POST /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments"],createDiscussionInOrg:["POST /orgs/{org}/teams/{team_slug}/discussions"],deleteDiscussionCommentInOrg:["DELETE /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}"],deleteDiscussionInOrg:["DELETE /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}"],deleteInOrg:["DELETE /orgs/{org}/teams/{team_slug}"],getByName:["GET /orgs/{org}/teams/{team_slug}"],getDiscussionCommentInOrg:["GET /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}"],getDiscussionInOrg:["GET /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}"],getMembershipForUserInOrg:["GET /orgs/{org}/teams/{team_slug}/memberships/{username}"],list:["GET /orgs/{org}/teams"],listChildInOrg:["GET /orgs/{org}/teams/{team_slug}/teams"],listDiscussionCommentsInOrg:["GET /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments"],listDiscussionsInOrg:["GET /orgs/{org}/teams/{team_slug}/discussions"],listForAuthenticatedUser:["GET /user/teams"],listMembersInOrg:["GET /orgs/{org}/teams/{team_slug}/members"],listPendingInvitationsInOrg:["GET /orgs/{org}/teams/{team_slug}/invitations"],listProjectsInOrg:["GET /orgs/{org}/teams/{team_slug}/projects"],listReposInOrg:["GET /orgs/{org}/teams/{team_slug}/repos"],removeMembershipForUserInOrg:["DELETE /orgs/{org}/teams/{team_slug}/memberships/{username}"],removeProjectInOrg:["DELETE /orgs/{org}/teams/{team_slug}/projects/{project_id}"],removeRepoInOrg:["DELETE /orgs/{org}/teams/{team_slug}/repos/{owner}/{repo}"],updateDiscussionCommentInOrg:["PATCH /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}"],updateDiscussionInOrg:["PATCH /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}"],updateInOrg:["PATCH /orgs/{org}/teams/{team_slug}"]},users:{addEmailForAuthenticated:["POST /user/emails",{},{renamed:["users","addEmailForAuthenticatedUser"]}],addEmailForAuthenticatedUser:["POST /user/emails"],addSocialAccountForAuthenticatedUser:["POST /user/social_accounts"],block:["PUT /user/blocks/{username}"],checkBlocked:["GET /user/blocks/{username}"],checkFollowingForUser:["GET /users/{username}/following/{target_user}"],checkPersonIsFollowedByAuthenticated:["GET /user/following/{username}"],createGpgKeyForAuthenticated:["POST /user/gpg_keys",{},{renamed:["users","createGpgKeyForAuthenticatedUser"]}],createGpgKeyForAuthenticatedUser:["POST /user/gpg_keys"],createPublicSshKeyForAuthenticated:["POST /user/keys",{},{renamed:["users","createPublicSshKeyForAuthenticatedUser"]}],createPublicSshKeyForAuthenticatedUser:["POST /user/keys"],createSshSigningKeyForAuthenticatedUser:["POST /user/ssh_signing_keys"],deleteEmailForAuthenticated:["DELETE /user/emails",{},{renamed:["users","deleteEmailForAuthenticatedUser"]}],deleteEmailForAuthenticatedUser:["DELETE /user/emails"],deleteGpgKeyForAuthenticated:["DELETE /user/gpg_keys/{gpg_key_id}",{},{renamed:["users","deleteGpgKeyForAuthenticatedUser"]}],deleteGpgKeyForAuthenticatedUser:["DELETE /user/gpg_keys/{gpg_key_id}"],deletePublicSshKeyForAuthenticated:["DELETE /user/keys/{key_id}",{},{renamed:["users","deletePublicSshKeyForAuthenticatedUser"]}],deletePublicSshKeyForAuthenticatedUser:["DELETE /user/keys/{key_id}"],deleteSocialAccountForAuthenticatedUser:["DELETE /user/social_accounts"],deleteSshSigningKeyForAuthenticatedUser:["DELETE /user/ssh_signing_keys/{ssh_signing_key_id}"],follow:["PUT /user/following/{username}"],getAuthenticated:["GET /user"],getByUsername:["GET /users/{username}"],getContextForUser:["GET /users/{username}/hovercard"],getGpgKeyForAuthenticated:["GET /user/gpg_keys/{gpg_key_id}",{},{renamed:["users","getGpgKeyForAuthenticatedUser"]}],getGpgKeyForAuthenticatedUser:["GET /user/gpg_keys/{gpg_key_id}"],getPublicSshKeyForAuthenticated:["GET /user/keys/{key_id}",{},{renamed:["users","getPublicSshKeyForAuthenticatedUser"]}],getPublicSshKeyForAuthenticatedUser:["GET /user/keys/{key_id}"],getSshSigningKeyForAuthenticatedUser:["GET /user/ssh_signing_keys/{ssh_signing_key_id}"],list:["GET /users"],listBlockedByAuthenticated:["GET /user/blocks",{},{renamed:["users","listBlockedByAuthenticatedUser"]}],listBlockedByAuthenticatedUser:["GET /user/blocks"],listEmailsForAuthenticated:["GET /user/emails",{},{renamed:["users","listEmailsForAuthenticatedUser"]}],listEmailsForAuthenticatedUser:["GET /user/emails"],listFollowedByAuthenticated:["GET /user/following",{},{renamed:["users","listFollowedByAuthenticatedUser"]}],listFollowedByAuthenticatedUser:["GET /user/following"],listFollowersForAuthenticatedUser:["GET /user/followers"],listFollowersForUser:["GET /users/{username}/followers"],listFollowingForUser:["GET /users/{username}/following"],listGpgKeysForAuthenticated:["GET /user/gpg_keys",{},{renamed:["users","listGpgKeysForAuthenticatedUser"]}],listGpgKeysForAuthenticatedUser:["GET /user/gpg_keys"],listGpgKeysForUser:["GET /users/{username}/gpg_keys"],listPublicEmailsForAuthenticated:["GET /user/public_emails",{},{renamed:["users","listPublicEmailsForAuthenticatedUser"]}],listPublicEmailsForAuthenticatedUser:["GET /user/public_emails"],listPublicKeysForUser:["GET /users/{username}/keys"],listPublicSshKeysForAuthenticated:["GET /user/keys",{},{renamed:["users","listPublicSshKeysForAuthenticatedUser"]}],listPublicSshKeysForAuthenticatedUser:["GET /user/keys"],listSocialAccountsForAuthenticatedUser:["GET /user/social_accounts"],listSocialAccountsForUser:["GET /users/{username}/social_accounts"],listSshSigningKeysForAuthenticatedUser:["GET /user/ssh_signing_keys"],listSshSigningKeysForUser:["GET /users/{username}/ssh_signing_keys"],setPrimaryEmailVisibilityForAuthenticated:["PATCH /user/email/visibility",{},{renamed:["users","setPrimaryEmailVisibilityForAuthenticatedUser"]}],setPrimaryEmailVisibilityForAuthenticatedUser:["PATCH /user/email/visibility"],unblock:["DELETE /user/blocks/{username}"],unfollow:["DELETE /user/following/{username}"],updateAuthenticated:["PATCH /user"]}},NZ=EZ,e=new Map;for(let[G,Y]of Object.entries(NZ))for(let[Z,Q]of Object.entries(Y)){const[X,J,W]=Q,[B,M]=X.split(/ /),I=Object.assign({method:B,url:M},J);if(!e.has(G))e.set(G,new Map);e.get(G).set(Z,{scope:G,methodName:Z,endpointDefaults:I,decorations:W})}DZ={get({octokit:G,scope:Y,cache:Z},Q){if(Z[Q])return Z[Q];const{decorations:X,endpointDefaults:J}=e.get(Y).get(Q);if(X)Z[Q]=RZ(G,Y,Q,J,X);else Z[Q]=G.request.defaults(J);return Z[Q]}};y1.VERSION=O1;v1.VERSION=O1});var f1=R((N5,m1)=>{var{defineProperty:dG,getOwnPropertyDescriptor:CZ,getOwnPropertyNames:AZ}=Object,_Z=Object.prototype.hasOwnProperty,jZ=(G,Y)=>{for(var Z in Y)dG(G,Z,{get:Y[Z],enumerable:!0})},xZ=(G,Y,Z,Q)=>{if(Y&&typeof Y==="object"||typeof Y==="function"){for(let X of AZ(Y))if(!_Z.call(G,X)&&X!==Z)dG(G,X,{get:()=>Y[X],enumerable:!(Q=CZ(Y,X))||Q.enumerable})}return G},qZ=(G)=>xZ(dG({},"__esModule",{value:!0}),G),g1={};jZ(g1,{Octokit:()=>hZ});m1.exports=qZ(g1);var OZ=P1(),bZ=(D1(),O(N1)),yZ=q1(),vZ=(h1(),O(k1)),kZ="20.0.2",hZ=OZ.Octokit.plugin(bZ.requestLog,vZ.legacyRestEndpointMethods,yZ.paginateRest).defaults({userAgent:`octokit-rest.js/${kZ}`})});var aZ=R(()=>{async function lZ(){const G=await uZ.getMyStats({range:mZ.LAST_7_DAYS});await iZ(G)}var pZ=function(G,Y){return G.length>Y?G.substring(0,Y-3)+"...":G};async function iZ(G){let Y;try{Y=await d1.gists.get({gist_id:c1})}catch(Q){console.error(`Unable to get gist\n${Q}`)}const Z=[];for(let Q=0;Q<Math.min(G.data.languages.length,5);Q++){const X=G.data.languages[Q],{name:J,percent:W,text:B}=X,M=[pZ(J,10).padEnd(10),B.padEnd(14),nZ(W,21),String(W.toFixed(1)).padStart(5)+"%"];Z.push(M.join(" "))}if(Z.length==0)return;try{const Q=Object.keys(Y.data.files)[0];await d1.gists.update({gist_id:c1,files:{[Q]:{filename:"\uD83D\uDCCA Weekly development breakdown",content:Z.join("\n")}}})}catch(Q){console.error(`Unable to update gist\n${Q}`)}}var nZ=function(G,Y){const Q=Math.floor(Y*8*G/100),X=Math.floor(Q/8);if(X>=Y)return"\u2591\u258F\u258E\u258D\u258C\u258B\u258A\u2589\u2588".substring(8,9).repeat(Y);const J=Q%8;return["\u2591\u258F\u258E\u258D\u258C\u258B\u258A\u2589\u2588".substring(8,9).repeat(X),"\u2591\u258F\u258E\u258D\u258C\u258B\u258A\u2589\u2588".substring(J,J+1)].join("").padEnd(Y,"\u2591\u258F\u258E\u258D\u258C\u258B\u258A\u2589\u2588".substring(0,1))},{WakaTimeClient:gZ,RANGE:mZ}=_0(),{Octokit:fZ}=f1(),{GIST_ID:c1,GH_TOKEN:cZ,WAKATIME_API_KEY:dZ}=process.env,uZ=new gZ(dZ),d1=new fZ({auth:`token ${cZ}`});(async()=>{await lZ()})()});export default aZ();
